---- struct Matches (2497 in 66 files) ----
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * The functions operate on matrix data structures.  For example,
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * definition for the floating-point matrix structure is shown
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): *     typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * The structure specifies the size of the matrix and then points to
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * data structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * The initialization function sets the values of the internal structure fields.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * then the instance structure cannot be placed into a const data section.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * To place the instance structure in a const data
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * section, manually initialize the data structure.  For example:
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q7 FIR filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 FIR filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 FIR filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point FIR filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q7 FIR filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q7 FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 FIR filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q15 FIR filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 FIR filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q31 FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the floating-point FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the floating-point FIR filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 Biquad cascade filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 Biquad cascade filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point Biquad cascade filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S points to an instance of the Q15 Biquad cascade structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S           points to an instance of the Q15 Biquad cascade structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S points to an instance of the Q15 Biquad cascade structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S         points to an instance of the Q31 Biquad cascade structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S         points to an instance of the Q31 Biquad cascade structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S           points to an instance of the Q31 Biquad cascade structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S         points to an instance of the floating-point Biquad cascade structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S           points to an instance of the floating-point Biquad cascade structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point matrix structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 matrix structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 matrix structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA  points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB  points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst   points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcA points to the first input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *pSrcB points to the second input matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out]      *pDst points to output matrix structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S             points to an instance of the floating-point matrix structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S             points to an instance of the floating-point matrix structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S             points to an instance of the floating-point matrix structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 PID Control.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 PID Control.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point PID Control.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S      points to an instance of the PID structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S is an instance of the floating-point PID Control structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q15 PID structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q31 PID Control structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q15 PID structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the q15 PID Control structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point Linear Interpolate function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point bilinear interpolation function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 bilinear interpolation function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 bilinear interpolation function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 bilinear interpolation function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 CFFT/CIFFT function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 CFFT/CIFFT function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point CFFT/CIFFT function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]      *S    points to an instance of the Q15 CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S             points to an instance of the Q15 CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]      *S    points to an instance of the Q31 CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S             points to an instance of the Q31 CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]      *S    points to an instance of the floating-point CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S             points to an instance of the floating-point CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 RFFT/RIFFT function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 RFFT/RIFFT function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point RFFT/RIFFT function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S    points to an instance of the Q15 RFFT/RIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in, out] *S             points to an instance of the Q15 RFFT/RIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]      *S_CFFT        points to an instance of the Q15 CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S    points to an instance of the Q31 RFFT/RIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in, out] *S             points to an instance of the Q31 RFFT/RIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in, out] *S_CFFT        points to an instance of the Q31 CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S             points to an instance of the floating-point RFFT/RIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S_CFFT        points to an instance of the floating-point CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S    points to an instance of the floating-point RFFT/RIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point DCT4/IDCT4 function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S         points to an instance of floating-point DCT4/IDCT4 structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]     *S_RFFT    points to an instance of floating-point RFFT/RIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]     *S_CFFT    points to an instance of floating-point CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *S             points to an instance of the floating-point DCT4/IDCT4 structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 DCT4/IDCT4 function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S         points to an instance of Q31 DCT4/IDCT4 structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]     *S_RFFT    points to an instance of Q31 RFFT/RIFFT structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]     *S_CFFT    points to an instance of Q31 CFFT/CIFFT structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *S             points to an instance of the Q31 DCT4 structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 DCT4/IDCT4 function.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S         points to an instance of Q15 DCT4/IDCT4 structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]     *S_RFFT    points to an instance of Q15 RFFT/RIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]     *S_CFFT    points to an instance of Q15 CFFT/CIFFT structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]       *S             points to an instance of the Q15 DCT4 structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 FIR decimator.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 FIR decimator.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point FIR decimator.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the floating-point FIR decimator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the floating-point FIR decimator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 FIR decimator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 FIR decimator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q15 FIR decimator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 FIR decimator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 FIR decimator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q31 FIR decimator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 FIR interpolator.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 FIR interpolator.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point FIR interpolator.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S        points to an instance of the Q15 FIR interpolator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S        points to an instance of the Q15 FIR interpolator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S        points to an instance of the Q15 FIR interpolator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S        points to an instance of the Q31 FIR interpolator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S        points to an instance of the floating-point FIR interpolator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S        points to an instance of the floating-point FIR interpolator structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the high precision Q31 Biquad cascade filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S        points to an instance of the high precision Q31 Biquad cascade filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S           points to an instance of the high precision Q31 Biquad cascade filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S        points to an instance of the filter data structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S           points to an instance of the filter data structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 FIR lattice filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 FIR lattice filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point FIR lattice filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 FIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 FIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 FIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S        points to an instance of the Q31 FIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * @param[in] *S points to an instance of the floating-point FIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S        points to an instance of the floating-point FIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 IIR lattice filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 IIR lattice filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point IIR lattice filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the floating-point IIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the floating-point IIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 IIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 IIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 IIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * @param[in] *S points to an instance of the fixed-point Q15 IIR lattice structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point LMS filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S points to an instance of the floating-point LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the floating-point LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 LMS filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 LMS filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S points to an instance of the Q15 LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point normalized LMS filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the floating-point normalized LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the floating-point LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 normalized LMS filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 normalized LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q31 normalized LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 normalized LMS filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 normalized LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in] *S points to an instance of the Q15 normalized LMS filter structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the floating-point sparse FIR filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q31 sparse FIR filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q15 sparse FIR filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @brief Instance structure for the Q7 sparse FIR filter.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S          points to an instance of the floating-point sparse FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S         points to an instance of the floating-point sparse FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S          points to an instance of the Q31 sparse FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S         points to an instance of the Q31 sparse FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S           points to an instance of the Q15 sparse FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S         points to an instance of the Q15 sparse FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *S           points to an instance of the Q7 sparse FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S         points to an instance of the Q7 sparse FIR structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * \par Instance Structure 
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instance data structure. 
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * A separate instance structure must be defined for each PID Controller. 
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * There are separate instance structure declarations for each of the 3 supported data types. 
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * Instance structure cannot be placed into a const data section and it is recommended to use the initialization function. 
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S is an instance of the floating-point PID Control structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q31 PID Control structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S points to an instance of the Q15 PID Control structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in]  *src points to the instance of the input floating-point matrix structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[out] *dst points to the instance of the output floating-point matrix structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * <code>S</code> points to an instance of the Linear Interpolate function data structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * @param[in,out] *S is an instance of the floating-point Linear Interpolation structure
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * The instance structure used by the bilinear interpolation functions describes a two dimensional data table.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   * For floating-point, the instance structure is defined as:
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):   *   typedef struct
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  * @param[in,out] *S points to an instance of the interpolation structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  * @param[in,out] *S points to an instance of the interpolation structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  * @param[in,out] *S points to an instance of the interpolation structure.
Arm_math.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  * @param[in,out] *S points to an instance of the interpolation structure.
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  <title>CMSIS: Cortex-M4 SIMD Instructions</title><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<h1>CMSIS Support for Cortex-M4 SIMD Instructions</h1>
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<p align="center">This file describes the Cortex-M4 SIMD instructions supported by CMSIS.</p>
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  <li class="LI2"><a href="#CM4-SIMD-Instructions">Cortex-M4 SIMD instruction support</a></li>
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  CMSIS provides for the Cortex-M4 a set of functions supporting Cortex-M4 SIMD instructions.
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<h2><a name="CM4-SIMD-Instructions"></a>Cortex-M4 SIMD instruction support</h2>
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<p>CMSIS supports the following functions for Cortex-M4 instructions:
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td>This function inserts an SASX instruction into the instruction stream generated by the 
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td>This function inserts a SEL instruction into the instruction stream generated by the 
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):          that are selected depend upon the results of previous SIMD instruction function. The 
CMSIS_CM4_SIMD.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):          results of previous SIMD instruction function are represented by the Greater than or 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):	<li>Version 1.30 2nd PRE-RELEASE: changed folder structure, added doxyGen comments, added Bit definitions.</li>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  <li><strong>CAPITAL</strong> names to identify Core Registers, Peripheral Registers, and CPU Instructions.</li>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Defines the Cortex-M Core instructions.</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):    for all device peripherals. It contains all data structures and the address 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):typedef struct
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):	<li>&lt;device abbreviation&gt;_UART1: is a pointer to a register structure that refers to a specific UART. 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      Names that start with RESERVE are used to introduce space into the structure to adjust the addresses of
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):typedef struct
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  File <b>core_cm0.h</b> describes the data structures for the Cortex-M0 core peripherals and does 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  the address mapping of this structures. It also provides basic access to the Cortex-M0 core registers 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  File <b>core_cm3.h</b> describes the data structures for the Cortex-M3 core peripherals and does 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  the address mapping of this structures. It also provides basic access to the Cortex-M3 core registers 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  File <b>core_cm4.h</b> describes the data structures for the Cortex-M4 core peripherals and does 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  the address mapping of this structures. It also provides basic access to the Cortex-M4 core registers 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  File <b>core_cm4_simd.h</b> defines Cortex-M4 SIMD instructions.
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  File <b>core_cmInstr.h</b> defines the Cortex-M Core instructions (defined as <strong>static inline</strong>).
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Global Interrupt enable (using the instruction <strong>CPSIE	i</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Global Interrupt disable (using the instruction <strong>CPSID i</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Return Control Register Value (using the instruction <strong>MRS</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Set CONTROL register value (using the instruction <strong>MSR</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Return IPSR Register Value (using the instruction <strong>MRS</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Return APSR Register Value (using the instruction <strong>MRS</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Return xPSR Register Value (using the instruction <strong>MRS</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Return Process Stack Pointer (using the instruction <strong>MRS</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Set Process Stack Pointer value (using the instruction <strong>MSR</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Return Main Stack Pointer (using the instruction <strong>MRS</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Set Main Stack Pointer (using the instruction <strong>MSR</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Return Priority Mask Register (using the instruction <strong>MRS</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Assign value to Priority Mask Register (using the instruction <strong>MSR</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Global Fault exception and Interrupt enable (using the instruction <strong>CPSIE f</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Global Fault exception and Interrupt disable (using the instruction <strong>CPSID f</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Return Base Priority (using the instruction <strong>MRS</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Set Base Priority (using the instruction <strong>MSR</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Return Fault Mask Register (using the instruction <strong>MRS</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Assign value to Fault Mask Register (using the instruction <strong>MSR</strong>)</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<h3>Cortex-M Instruction Access</h3>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  generate specific Cortex-M instructions. The functions are implemented in the file 
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <th class="kt">Generated CPU Instruction</th>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):      <td class="kt">Instruction Synchronization Barrier</td>
CMSIS_Core.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  The CMSIS provides access to the NVIC via the register interface structure and several helper
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<h3>Simplified folder structure for CMSIS include files</h3>
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<h3>Changed folder structure for Device Support packages</h3>
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  optimized towards using the extended DSP instruction set of the Cortex-M4 processor, 
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  <li>core_cmInstr.h  (Cortex-M Core instructions)</li>
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  <li>core_cm4_simd.h (Cortex-M4 SIMD instructions)</li>
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  e.g. SysTick structure with bit definitions
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):/** \brief  Structure type to access the System Timer (SysTick).
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):typedef struct
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<h3>Folder Structure</h3>
CMSIS_History.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):  The folder structure is changed to differentiate the single support packages.
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):	IP-XACT constructs and naming scheme)</li>
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):	display and CMSIS compliant by construction. The header file generation will 
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):by agreeing on a formal XML-based file format. In conjunction with supporting web server infrastructure silicon partner 
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):database, hosted e.g. by the web server infrastructure 
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<p>The hierarchical structure of the description looks like this:</p>
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):similar or related peripherals into peripheral groups helps structuring the list 
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):set of peripherals will benefit from this additional level of structure.</p>
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<p>This construct sets the frame for all peripherals and peripheral groups contained in a device. This 
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<p>This construct sets the frame for all registers contained in a peripheral. 
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):this register location unless explicitly instructed by user.</p>
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<p>This construct sets the frame for all fields contained in a register. 
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):to read the field unless explicitly instructed by user.</p>
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<h3>Why does the format not provide constructs like macros and 
CMSIS_System_View_Description.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\documentation):<p>There may have been assumptions made about the structure of the device due to 
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):     - Cortex-M instructions
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  This file defines all structures and symbols for CMSIS core:
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#include "core_cmInstr.h"                /*!< Core Instruction Access                         */
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the System Control Block (SCB).
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the System Timer (SysTick).
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct           */
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration struct       */
Core_cm0.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struct          */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):     - Cortex-M instructions
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  This file defines all structures and symbols for CMSIS core:
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#include "core_cmInstr.h"                /*!< Core Instruction Access                         */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the System Control Block (SCB).
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Register                   */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the System Control and ID Register not in the SCB.
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the System Timer (SysTick).
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Memory Protection Unit (MPU).
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Core Debug Register (CoreDebug).
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct           */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration struct       */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struct          */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct           */
Core_cm3.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration struct    */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):     - Cortex-M instructions
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):     - Cortex-M SIMD instructions
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  This file defines all structures and symbols for CMSIS core:
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):      #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):      #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):      #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#include <core_cmInstr.h>                /*!< Core Instruction Access                         */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  } b;                                   /*!< Structure used for bit  access                  */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the System Control Block (SCB).
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Register                   */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the System Control and ID Register not in the SCB.
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the System Timer (SysTick).
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Memory Protection Unit (MPU).
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Floating Point Unit (FPU).
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Structure type to access the Core Debug Register (CoreDebug).
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):typedef struct
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct           */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration struct       */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struct          */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct           */
Core_cm4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):#define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration struct    */
Core_cm4_simd.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  Access to dedicated SIMD instructions
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include): * @brief    CMSIS Cortex-M Core Instruction Access Header File
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/* ##########################  Core Instruction Access  ######################### */
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):  Access to dedicated instructions
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    No Operation does nothing. This instruction can be used for code alignment purposes.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    Wait For Interrupt is a hint instruction that suspends execution
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    Wait For Event is a hint instruction that permits the processor to enter
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    Send Event is a hint instruction. It causes an event to be signaled to the CPU.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Instruction Synchronization Barrier
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    Instruction Synchronization Barrier flushes the pipeline in the processor, 
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    so that all instructions following the ISB are fetched from cache or 
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    memory, after the instruction has been completed.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    It completes when all explicit memory accesses before this instruction complete.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    and after the instruction, without ensuring their completion.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    No Operation does nothing. This instruction can be used for code alignment purposes.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    Wait For Interrupt is a hint instruction that suspends execution
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    Wait For Event is a hint instruction that permits the processor to enter
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    Send Event is a hint instruction. It causes an event to be signaled to the CPU.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/** \brief  Instruction Synchronization Barrier
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    Instruction Synchronization Barrier flushes the pipeline in the processor, 
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    so that all instructions following the ISB are fetched from cache or 
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    memory, after the instruction has been completed.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    It completes when all explicit memory accesses before this instruction complete.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):    and after the instruction, without ensuring their completion.
core_cmInstr.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\include):/*@}*/ /* end of group CMSIS_Core_InstructionInterface */
FM31X4.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):	GPIO_InitTypeDef GPIO_InitStructure;
FM31X4.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):		GPIO_InitStructure.GPIO_Pin   = FM31X4_I2C1_SDA;
FM31X4.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):		GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;
FM31X4.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_25MHz;
FM31X4.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):		GPIO_Init(FM31X4_I2C1_PORT, &GPIO_InitStructure);	
FM31X4.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):		GPIO_InitStructure.GPIO_Pin  = FM31X4_I2C1_SDA;
FM31X4.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
FM31X4.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):		GPIO_Init(FM31X4_I2C1_PORT, &GPIO_InitStructure);	
FM31X4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\inc):typedef struct 
FM31X4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\inc):typedef struct 
FM31X4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\inc):typedef struct
FM31X4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\inc):typedef struct
FM31X4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\inc):typedef struct
FM31X4.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\inc):typedef struct
Index.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis):  <li class="LI2"><a href="Documentation/CMSIS_CM4_SIMD.htm">CMSIS Support for Cortex-M4 SIMD Instructions</a>
Index.htm (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis):    lists the Cortex-M4 instructions supported by CMSIS.
Main.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src): USART_InitTypeDef USART_InitStructure;
Main.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  USART_InitStructure.USART_BaudRate = 115200;
Main.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  USART_InitStructure.USART_WordLength = USART_WordLength_8b;
Main.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  USART_InitStructure.USART_StopBits = USART_StopBits_1;
Main.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  USART_InitStructure.USART_Parity = USART_Parity_No;
Main.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
Main.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
Main.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  STM_EVAL_COMInit(COM1, &USART_InitStructure);
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the NVIC_InitStruct.
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
Misc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
Misc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  NVIC Init Structure definition  
Misc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Misc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct);
Release_Notes.html (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx):li><li class="MsoNormal" style="color: black; margin-top: 4.5pt; margin-bottom: 4.5pt;"><span style="font-size: 10pt; font-family: Verdana;">Add new defines&nbsp;<span style="font-style: italic;">SRAM2_BASE, CCMDATARAM_BASE </span>and<span style="font-style: italic;"> BKPSRAM_BASE</span></span></li></ul><li class="MsoNormal" style="color: black; margin-top: 4.5pt; margin-bottom: 4.5pt;"><span style="font-size: 10pt; font-family: Verdana;">GPIO_TypeDef structure: in the comment change AFR[2] address mapping&nbsp;to <span style="font-style: italic;">0x20-0x24</span> instead of <span style="font-style: italic;">0x24-0x28</span></span></li></ul><li class="MsoNormal" style="color: black; margin-top: 4.5pt; margin-bottom: 4.5pt;"><span style="font-size: 10pt; font-family: Verdana;">system_stm32f4xx.c</span></li><ul><li class="MsoNormal" style="color: black; margin-top: 4.5pt; margin-bottom: 4.5pt;"><span style="font-size: 10pt; font-family: Verdana;"><span style="font-style: italic;">SystemInit()</span>: add code to enable the FPU</span></li><li class="MsoNormal" style="color: black; margin-top: 4.5pt; margin-bottom: 4.5pt;"><span style="font-size: 10pt; font-family: Verdana;"><span style="font-style: italic;">SetSysClock()</span>: change <span style="font-style: italic;">PWR_CR_PMODE</span> by&nbsp;<span style="font-style: italic;">PWR_CR_VOS</span></span></li><li class="MsoNormal" style="color: black; margin-top: 4.5pt; margin-bottom: 4.5pt;"><span style="font-size: 10pt; font-family: Verdana;"><span style="font-style: italic;">SystemInit_ExtMemCtl()</span>: remove commented values</span></li></ul><li class="MsoNormal" style="color: black; margin-top: 4.5pt; margin-bottom: 4.5pt;"><span style="font-size: 10pt; font-family: Verdana;">startup (for all compilers)</span></li><ul><li class="MsoNormal" style="color: black; margin-top: 4.5pt; margin-bottom: 4.5pt;"><span style="font-size: 10pt; font-family: Verdana;">Delete code used to enable the FPU (moved to system_stm32f4xx.c file)</span></li><li class="MsoNormal" style="color: black; margin-top: 4.5pt; margin-bottom: 4.5pt;"><span style="font-size: 10pt; font-family: Verdana;">File&#8217;s header updated</span></li></ul></ul><h3 style="background: rgb(51, 102, 255) none repeat scroll 0% 50%; -moz-background-clip: initial; -moz-background-origin: initial; -moz-background-inline-policy: initial; margin-right: 500pt; width: 176px;"><span style="font-size: 10pt; font-family: Arial; color: white;">V1.0.0RC1 / 25-August-2011<o:p></o:p></span></h3><p class="MsoNormal" style="margin: 4.5pt 0cm 4.5pt 18pt;"><b style=""><u><span style="font-size: 10pt; font-family: Verdana; color: black;">Main
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):DMA_InitTypeDef    sEEDMA_InitStructure; 
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):NVIC_InitTypeDef   NVIC_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitTypeDef  GPIO_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = GPIO_PIN[Led];
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(GPIO_PORT[Led], &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitTypeDef GPIO_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  EXTI_InitTypeDef EXTI_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitTypeDef NVIC_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = BUTTON_PIN[Button];
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    EXTI_InitStructure.EXTI_Line = BUTTON_EXTI_LINE[Button];
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):      EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):      EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    EXTI_InitStructure.EXTI_LineCmd = ENABLE;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    EXTI_Init(&EXTI_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    NVIC_InitStructure.NVIC_IRQChannel = BUTTON_IRQn[Button];
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0F;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    NVIC_Init(&NVIC_InitStructure); 
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure that
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):void STM_EVAL_COMInit(COM_TypeDef COM, USART_InitTypeDef* USART_InitStruct)
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitTypeDef GPIO_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = COM_TX_PIN[COM];
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(COM_TX_PORT[COM], &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = COM_RX_PIN[COM];
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(COM_RX_PORT[COM], &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  USART_Init(COM_USART[COM], USART_InitStruct);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitTypeDef  GPIO_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(GPIOC, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(GPIOD, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(GPIOC, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitTypeDef  GPIO_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_25MHz;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(GPIOC, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(GPIOD, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(GPIOC, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = SD_DETECT_PIN;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(SD_DETECT_GPIO_PORT, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  DMA_InitTypeDef SDDMA_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_Channel = SD_SDIO_DMA_CHANNEL;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_ADDRESS;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)BufferSRC;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_DIR = DMA_DIR_MemoryToPeripheral;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_BufferSize = 0;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Enable;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_Full;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_INC4;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_INC4;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  DMA_Init(SD_SDIO_DMA_STREAM, &SDDMA_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  DMA_InitTypeDef SDDMA_InitStructure;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_Channel = SD_SDIO_DMA_CHANNEL;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_ADDRESS;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)BufferDST;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_BufferSize = 0;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Enable;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_Full;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_INC4;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  SDDMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_INC4;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  DMA_Init(SD_SDIO_DMA_STREAM, &SDDMA_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitTypeDef  GPIO_InitStructure; 
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = sEE_I2C_SCL_PIN;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(sEE_I2C_SCL_GPIO_PORT, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = sEE_I2C_SDA_PIN;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(sEE_I2C_SDA_GPIO_PORT, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannel = sEE_I2C_DMA_TX_IRQn;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = sEE_I2C_DMA_PREPRIO;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelSubPriority = sEE_I2C_DMA_SUBPRIO;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelCmd = DISABLE;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_Init(&NVIC_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannel = sEE_I2C_DMA_RX_IRQn;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = sEE_I2C_DMA_PREPRIO;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelSubPriority = sEE_I2C_DMA_SUBPRIO;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_Init(&NVIC_InitStructure);   
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitTypeDef  GPIO_InitStructure; 
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = sEE_I2C_SCL_PIN;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(sEE_I2C_SCL_GPIO_PORT, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_InitStructure.GPIO_Pin = sEE_I2C_SDA_PIN;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  GPIO_Init(sEE_I2C_SDA_GPIO_PORT, &GPIO_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannel = sEE_I2C_DMA_TX_IRQn;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = sEE_I2C_DMA_PREPRIO;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelSubPriority = sEE_I2C_DMA_SUBPRIO;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_Init(&NVIC_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannel = sEE_I2C_DMA_RX_IRQn;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = sEE_I2C_DMA_PREPRIO;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_InitStructure.NVIC_IRQChannelSubPriority = sEE_I2C_DMA_SUBPRIO;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  NVIC_Init(&NVIC_InitStructure);  
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_Channel = sEE_I2C_DMA_CHANNEL;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)sEE_I2C_DR_Address;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)0;    /* This parameter will be configured durig communication */;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_DIR = DMA_DIR_MemoryToPeripheral; /* This parameter will be configured durig communication */
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_BufferSize = 0xFFFF;              /* This parameter will be configured durig communication */
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Enable;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_Full;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  sEEDMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  DMA_Init(sEE_I2C_DMA_STREAM_TX, &sEEDMA_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  DMA_Init(sEE_I2C_DMA_STREAM_RX, &sEEDMA_InitStructure);
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    sEEDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)pBuffer;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    sEEDMA_InitStructure.DMA_DIR = DMA_DIR_MemoryToPeripheral;    
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    sEEDMA_InitStructure.DMA_BufferSize = (uint32_t)BufferSize;  
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    DMA_Init(sEE_I2C_DMA_STREAM_TX, &sEEDMA_InitStructure);  
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    sEEDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)pBuffer;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    sEEDMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    sEEDMA_InitStructure.DMA_BufferSize = (uint32_t)BufferSize;      
Stm324xg_eval.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    DMA_Init(sEE_I2C_DMA_STREAM_RX, &sEEDMA_InitStructure);    
Stm324xg_eval.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\inc):void STM_EVAL_COMInit(COM_TypeDef COM, USART_InitTypeDef* USART_InitStruct); 
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):  *           - Data structures and the address mapping for all peripherals
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):/** @addtogroup Peripheral_registers_structures
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct 
Stm32f4xx.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\include):typedef struct 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the ADC_InitStruct.
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ADC_RESOLUTION(ADC_InitStruct->ADC_Resolution)); 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode)); 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ADC_EXT_TRIG_EDGE(ADC_InitStruct->ADC_ExternalTrigConvEdge)); 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));    
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfConversion));
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg1 |= (uint32_t)(((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8) | \
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                                   ADC_InitStruct->ADC_Resolution);
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                        ADC_InitStruct->ADC_ExternalTrigConv | 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                        ADC_InitStruct->ADC_ExternalTrigConvEdge | \
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                        ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg2 |= (uint8_t)(ADC_InitStruct->ADC_NbrOfConversion - (uint8_t)1);
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each ADC_InitStruct member with its default value.
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure which will 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_InitStruct->ADC_Resolution = ADC_Resolution_12b;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_InitStruct->ADC_ScanConvMode = DISABLE;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_InitStruct->ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_InitStruct->ADC_NbrOfConversion = 1;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the ADC_CommonInitStruct.
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void ADC_CommonInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ADC_MODE(ADC_CommonInitStruct->ADC_Mode));
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ADC_PRESCALER(ADC_CommonInitStruct->ADC_Prescaler));
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ADC_DMA_ACCESS_MODE(ADC_CommonInitStruct->ADC_DMAAccessMode));
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ADC_SAMPLING_DELAY(ADC_CommonInitStruct->ADC_TwoSamplingDelay));
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                        ADC_CommonInitStruct->ADC_Prescaler | 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                        ADC_CommonInitStruct->ADC_DMAAccessMode | 
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                        ADC_CommonInitStruct->ADC_TwoSamplingDelay);
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each ADC_CommonInitStruct member with its default value.
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void ADC_CommonStructInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_CommonInitStruct->ADC_Mode = ADC_Mode_Independent;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_CommonInitStruct->ADC_Prescaler = ADC_Prescaler_Div2;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_CommonInitStruct->ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  ADC_CommonInitStruct->ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
Stm32f4xx_adc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         by ADC_CommonInitStruct.ADC_DMAAccessMode structure member) is 
Stm32f4xx_adc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   ADC Init structure definition  
Stm32f4xx_adc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_adc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   ADC Common Init structure definition  
Stm32f4xx_adc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct 
Stm32f4xx_adc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct);
Stm32f4xx_adc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct);
Stm32f4xx_adc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void ADC_CommonInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct);
Stm32f4xx_adc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void ADC_CommonStructInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct);
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the CAN_InitStruct.
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if (CAN_InitStruct->CAN_TTCM == ENABLE)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if (CAN_InitStruct->CAN_ABOM == ENABLE)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if (CAN_InitStruct->CAN_AWUM == ENABLE)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if (CAN_InitStruct->CAN_NART == ENABLE)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if (CAN_InitStruct->CAN_RFLM == ENABLE)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if (CAN_InitStruct->CAN_TXFP == ENABLE)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the CAN_FilterInitStruct.
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):        (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):        (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):        (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):        (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each CAN_InitStruct member with its default value.
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Reset CAN init structure parameters values */
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_TTCM = DISABLE;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_ABOM = DISABLE;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_AWUM = DISABLE;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_NART = DISABLE;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_RFLM = DISABLE;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_TXFP = DISABLE;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CAN_InitStruct->CAN_Prescaler = 1;
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
Stm32f4xx_can.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  CAN init structure definition
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  CAN filter init structure definition
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  CAN Tx message structure definition  
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  CAN Rx message structure definition  
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct);
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct);
Stm32f4xx_can.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct);
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the CRYP_InitStruct.
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_Key))
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each CRYP_InitStruct member with its default value.
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure which will
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct)
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitStruct->CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitStruct->CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitStruct->CRYP_DataType = CRYP_DataType_32b;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitStruct->CRYP_KeySize = CRYP_KeySize_128b;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         the CRYP_KeyInitStruct.
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each CRYP_KeyInitStruct member with its default value.
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitStruct->CRYP_Key0Right = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitStruct->CRYP_Key1Right = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitStruct->CRYP_Key2Right = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitStruct->CRYP_Key3Right = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         specified parameters in the CRYP_IVInitStruct.
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef structure that contains
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->IV0LR = CRYP_IVInitStruct->CRYP_IV0Left;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->IV0RR = CRYP_IVInitStruct->CRYP_IV0Right;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->IV1LR = CRYP_IVInitStruct->CRYP_IV1Left;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP->IV1RR = CRYP_IVInitStruct->CRYP_IV1Right;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each CRYP_IVInitStruct member with its default value.
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef Initialization 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         Vectors(IV) structure which will be initialized.
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInitStruct->CRYP_IV0Left  = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInitStruct->CRYP_IV0Right = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInitStruct->CRYP_IV1Left  = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInitStruct->CRYP_IV1Right = 0;
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CRYP_ContextSave: pointer to a CRYP_Context structure that contains
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                             CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_ContextSave->CRYP_K0LR = CRYP_KeyInitStruct->CRYP_Key0Left; 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
Stm32f4xx_cryp.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  CRYP_ContextRestore: pointer to a CRYP_Context structure that contains
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   CRYP Init structure definition  
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   CRYP Key(s) structure definition  
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   CRYP Initialization Vectors (IV) structure definition  
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  CRYP context swapping structure definition  
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct);
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct);
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct);
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct);
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct);
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct);
Stm32f4xx_cryp.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):                             CRYP_KeyInitTypeDef* CRYP_KeyInitStruct);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitTypeDef AES_CRYP_InitStructure;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Crypto structures initialisation*/
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_Init(&AES_CRYP_InitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_ECB;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_Init(&AES_CRYP_InitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitTypeDef AES_CRYP_InitStructure;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Crypto structures initialisation*/
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_Init(&AES_CRYP_InitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CBC;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_Init(&AES_CRYP_InitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInit(&AES_CRYP_IVInitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitTypeDef AES_CRYP_InitStructure;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Crypto structures initialisation*/
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CTR;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_Init(&AES_CRYP_InitStructure);
Stm32f4xx_cryp_aes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInit(&AES_CRYP_IVInitStructure);
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitTypeDef DES_CRYP_InitStructure;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Crypto structures initialisation*/
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):     DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):     DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_ECB;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_Init(&DES_CRYP_InitStructure);
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitTypeDef DES_CRYP_InitStructure;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInitTypeDef DES_CRYP_IVInitStructure;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Crypto structures initialisation*/
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):     DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):     DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_CBC;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_Init(&DES_CRYP_InitStructure);
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_des.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInit(&DES_CRYP_IVInitStructure);
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitTypeDef TDES_CRYP_InitStructure;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitTypeDef TDES_CRYP_KeyInitStructure;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Crypto structures initialisation*/
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyStructInit(&TDES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):     TDES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):     TDES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_Init(&TDES_CRYP_InitStructure);
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInit(& TDES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_InitTypeDef TDES_CRYP_InitStructure;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInitTypeDef TDES_CRYP_KeyInitStructure;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInitTypeDef TDES_CRYP_IVInitStructure;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Crypto structures initialisation*/
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyStructInit(&TDES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TDES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TDES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_TDES_CBC;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_Init(&TDES_CRYP_InitStructure);
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_KeyInit(& TDES_CRYP_KeyInitStructure);
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TDES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
Stm32f4xx_cryp_tdes.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  CRYP_IVInit(&TDES_CRYP_IVInitStructure);
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the DAC_InitStruct.
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude));
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             DAC_InitStruct->DAC_OutputBuffer);
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each DAC_InitStruct member with its default value.
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):/*--------------- Reset DAC init structure parameters values -----------------*/
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
Stm32f4xx_dac.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
Stm32f4xx_dac.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  DAC Init structure definition
Stm32f4xx_dac.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_dac.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct);
Stm32f4xx_dac.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct);
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *          3. Declare a DCMI_InitTypeDef structure, for example:
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                 DCMI_InitTypeDef  DCMI_InitStructure;
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *             and fill the DCMI_InitStructure variable with the allowed values
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *             of the structure member.
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                 DCMI_Init(&DCMI_InitStructure); 
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Initializes the DCMI according to the specified parameters in the DCMI_InitStruct.
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  DCMI_InitStruct: pointer to a DCMI_InitTypeDef structure that contains 
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void DCMI_Init(DCMI_InitTypeDef* DCMI_InitStruct)
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DCMI_CAPTURE_MODE(DCMI_InitStruct->DCMI_CaptureMode));
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DCMI_SYNCHRO(DCMI_InitStruct->DCMI_SynchroMode));
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DCMI_PCKPOLARITY(DCMI_InitStruct->DCMI_PCKPolarity));
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DCMI_VSPOLARITY(DCMI_InitStruct->DCMI_VSPolarity));
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DCMI_HSPOLARITY(DCMI_InitStruct->DCMI_HSPolarity));
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DCMI_CAPTURE_RATE(DCMI_InitStruct->DCMI_CaptureRate));
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DCMI_EXTENDED_DATA(DCMI_InitStruct->DCMI_ExtendedDataMode));
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  temp |= ((uint32_t)DCMI_InitStruct->DCMI_CaptureMode |
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     DCMI_InitStruct->DCMI_SynchroMode |
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     DCMI_InitStruct->DCMI_PCKPolarity |
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     DCMI_InitStruct->DCMI_VSPolarity |
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     DCMI_InitStruct->DCMI_HSPolarity |
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     DCMI_InitStruct->DCMI_CaptureRate |
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     DCMI_InitStruct->DCMI_ExtendedDataMode);
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each DCMI_InitStruct member with its default value.
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  DCMI_InitStruct : pointer to a DCMI_InitTypeDef structure which will
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void DCMI_StructInit(DCMI_InitTypeDef* DCMI_InitStruct)
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI_InitStruct->DCMI_CaptureMode = DCMI_CaptureMode_Continuous;
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI_InitStruct->DCMI_SynchroMode = DCMI_SynchroMode_Hardware;
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI_InitStruct->DCMI_PCKPolarity = DCMI_PCKPolarity_Falling;
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI_InitStruct->DCMI_VSPolarity = DCMI_VSPolarity_Low;
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI_InitStruct->DCMI_HSPolarity = DCMI_HSPolarity_Low;
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI_InitStruct->DCMI_CaptureRate = DCMI_CaptureRate_All_Frame;
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI_InitStruct->DCMI_ExtendedDataMode = DCMI_ExtendedDataMode_8b;
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the DCMI_CROPInitStruct.
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  DCMI_CROPInitStruct:  pointer to a DCMI_CROPInitTypeDef structure that 
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void DCMI_CROPConfig(DCMI_CROPInitTypeDef* DCMI_CROPInitStruct)
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI->CWSTRTR = (uint32_t)((uint32_t)DCMI_CROPInitStruct->DCMI_HorizontalOffsetCount |
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                  ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI->CWSIZER = (uint32_t)(DCMI_CROPInitStruct->DCMI_CaptureCount |
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                  ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  DCMI_CodesInitTypeDef: pointer to a DCMI_CodesInitTypeDef structure that
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void DCMI_SetEmbeddedSynchroCodes(DCMI_CodesInitTypeDef* DCMI_CodesInitStruct)
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                          ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                          ((uint32_t)DCMI_CodesInitStruct->DCMI_LineEndCode << 16)|
Stm32f4xx_dcmi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                          ((uint32_t)DCMI_CodesInitStruct->DCMI_FrameEndCode << 24));
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   DCMI Init structure definition  
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   DCMI CROP Init structure definition  
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   DCMI Embedded Synchronisation CODE Init structure definition  
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void DCMI_Init(DCMI_InitTypeDef* DCMI_InitStruct);
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void DCMI_StructInit(DCMI_InitTypeDef* DCMI_InitStruct);
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void DCMI_CROPConfig(DCMI_CROPInitTypeDef* DCMI_CROPInitStruct);
Stm32f4xx_dcmi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void DCMI_SetEmbeddedSynchroCodes(DCMI_CodesInitTypeDef* DCMI_CodesInitStruct);
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *             To avoid filling un-nesecessary fields, you can call DMA_StructInit() function
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *             to initialize a given structure with default values (reset values), the modify
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         the DMA_InitStruct structure.
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure that contains
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void DMA_Init(DMA_Stream_TypeDef* DMAy_Streamx, DMA_InitTypeDef* DMA_InitStruct)
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_CHANNEL(DMA_InitStruct->DMA_Channel));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_DIRECTION(DMA_InitStruct->DMA_DIR));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_BUFFER_SIZE(DMA_InitStruct->DMA_BufferSize));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_PERIPHERAL_INC_STATE(DMA_InitStruct->DMA_PeripheralInc));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_MEMORY_INC_STATE(DMA_InitStruct->DMA_MemoryInc));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(DMA_InitStruct->DMA_PeripheralDataSize));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_MEMORY_DATA_SIZE(DMA_InitStruct->DMA_MemoryDataSize));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_MODE(DMA_InitStruct->DMA_Mode));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_FIFO_MODE_STATE(DMA_InitStruct->DMA_FIFOMode));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_FIFO_THRESHOLD(DMA_InitStruct->DMA_FIFOThreshold));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_MEMORY_BURST(DMA_InitStruct->DMA_MemoryBurst));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_DMA_PERIPHERAL_BURST(DMA_InitStruct->DMA_PeripheralBurst));
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= DMA_InitStruct->DMA_Channel | DMA_InitStruct->DMA_DIR |
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            DMA_InitStruct->DMA_Mode | DMA_InitStruct->DMA_Priority |
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            DMA_InitStruct->DMA_MemoryBurst | DMA_InitStruct->DMA_PeripheralBurst;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= DMA_InitStruct->DMA_FIFOMode | DMA_InitStruct->DMA_FIFOThreshold;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMAy_Streamx->NDTR = DMA_InitStruct->DMA_BufferSize;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMAy_Streamx->PAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMAy_Streamx->M0AR = DMA_InitStruct->DMA_Memory0BaseAddr;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each DMA_InitStruct member with its default value.
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  DMA_InitStruct : pointer to a DMA_InitTypeDef structure which will 
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /*-------------- Reset DMA init structure parameters values ----------------*/
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_Channel = 0;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_Memory0BaseAddr = 0;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralToMemory;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_BufferSize = 0;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_FIFOMode = DMA_FIFOMode_Disable;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_FIFOThreshold = DMA_FIFOThreshold_1QuarterFull;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_MemoryBurst = DMA_MemoryBurst_Single;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  DMA_InitStruct->DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
Stm32f4xx_dma.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @note   Memory0BaseAddr is set by the DMA structure configuration in DMA_Init().
Stm32f4xx_dma.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  DMA Init structure definition
Stm32f4xx_dma.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_dma.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void DMA_Init(DMA_Stream_TypeDef* DMAy_Streamx, DMA_InitTypeDef* DMA_InitStruct);
Stm32f4xx_dma.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct);
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the EXTI_InitStruct.
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  EXTI_InitStruct: pointer to a EXTI_InitTypeDef structure
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmp += EXTI_InitStruct->EXTI_Mode;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      tmp += EXTI_InitStruct->EXTI_Trigger;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmp += EXTI_InitStruct->EXTI_Mode;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each EXTI_InitStruct member with its reset value.
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  EXTI_InitStruct: pointer to a EXTI_InitTypeDef structure which will
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
Stm32f4xx_exti.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  EXTI_InitStruct->EXTI_LineCmd = DISABLE;
Stm32f4xx_exti.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  EXTI Init Structure definition  
Stm32f4xx_exti.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_exti.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct);
Stm32f4xx_exti.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct);
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                    - Enable/Disable the Instruction cache and the Data cache
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                    - Reset the Instruction cache and the Data cache
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    - void FLASH_InstructionCacheCmd(FunctionalState NewState)
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    - void FLASH_InstructionCacheReset(void)
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Enables or disables the Instruction Cache feature.
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  NewState: new state of the Instruction Cache.
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void FLASH_InstructionCacheCmd(FunctionalState NewState)
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Resets the Instruction Cache.
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @note   This function must be used only when the Instruction Cache is disabled.  
Stm32f4xx_flash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void FLASH_InstructionCacheReset(void)
Stm32f4xx_flash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void FLASH_InstructionCacheCmd(FunctionalState NewState);
Stm32f4xx_flash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void FLASH_InstructionCacheReset(void);
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):   3. Declare a FSMC_NORSRAMInitTypeDef structure, for example:
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):          FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      and fill the FSMC_NORSRAMInitStructure variable with the allowed values of
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      the structure member.
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):          FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the FSMC_NORSRAMInitStruct.
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  FSMC_NORSRAMInitStruct : pointer to a FSMC_NORSRAMInitTypeDef structure
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_NORSRAM_BANK(FSMC_NORSRAMInitStruct->FSMC_Bank));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_MUX(FSMC_NORSRAMInitStruct->FSMC_DataAddressMux));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_MEMORY(FSMC_NORSRAMInitStruct->FSMC_MemoryType));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_MEMORY_WIDTH(FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_BURSTMODE(FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_ASYNWAIT(FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WAIT_POLARITY(FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WRAP_MODE(FSMC_NORSRAMInitStruct->FSMC_WrapMode));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WAIT_SIGNAL_ACTIVE(FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WRITE_OPERATION(FSMC_NORSRAMInitStruct->FSMC_WriteOperation));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WAITE_SIGNAL(FSMC_NORSRAMInitStruct->FSMC_WaitSignal));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_EXTENDED_MODE(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WRITE_BURST(FSMC_NORSRAMInitStruct->FSMC_WriteBurst));  
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_TURNAROUND_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode)); 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_MemoryType |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_WrapMode |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NORSRAMInitStruct->FSMC_WriteBurst;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if(FSMC_NORSRAMInitStruct->FSMC_MemoryType == FSMC_MemoryType_NOR)
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (uint32_t)BCR_FACCEN_SET;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode == FSMC_ExtendedMode_Enable)
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 0x0FFFFFFF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each FSMC_NORSRAMInitStruct member with its default value.
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  FSMC_NORSRAMInitStruct: pointer to a FSMC_NORSRAMInitTypeDef structure 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Reset NOR/SRAM Init structure parameters values */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_Bank = FSMC_Bank1_NORSRAM1;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_DataAddressMux = FSMC_DataAddressMux_Enable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_MemoryType = FSMC_MemoryType_SRAM;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WriteBurst = FSMC_WriteBurst_Disable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime = 0xFF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A; 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime = 0xFF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency = 0xF;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):   3. Declare a FSMC_NANDInitTypeDef structure, for example:
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):          FSMC_NANDInitTypeDef  FSMC_NANDInitStructure;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      and fill the FSMC_NANDInitStructure variable with the allowed values of
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      the structure member.
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):          FSMC_NANDInit(&FSMC_NANDInitStructure); 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the FSMC_NANDInitStruct.
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  FSMC_NANDInitStruct : pointer to a FSMC_NANDInitTypeDef structure that
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param( IS_FSMC_NAND_BANK(FSMC_NANDInitStruct->FSMC_Bank));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param( IS_FSMC_WAIT_FEATURE(FSMC_NANDInitStruct->FSMC_Waitfeature));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param( IS_FSMC_MEMORY_WIDTH(FSMC_NANDInitStruct->FSMC_MemoryDataWidth));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param( IS_FSMC_ECC_STATE(FSMC_NANDInitStruct->FSMC_ECC));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param( IS_FSMC_ECCPAGE_SIZE(FSMC_NANDInitStruct->FSMC_ECCPageSize));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param( IS_FSMC_TCLR_TIME(FSMC_NANDInitStruct->FSMC_TCLRSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param( IS_FSMC_TAR_TIME(FSMC_NANDInitStruct->FSMC_TARSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Set the tmppcr value according to FSMC_NANDInitStruct parameters */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NANDInitStruct->FSMC_ECC |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            FSMC_NANDInitStruct->FSMC_ECCPageSize |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if(FSMC_NANDInitStruct->FSMC_Bank == FSMC_Bank2_NAND)
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each FSMC_NANDInitStruct member with its default value.
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  FSMC_NANDInitStruct: pointer to a FSMC_NANDInitTypeDef structure which
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Reset NAND Init structure parameters values */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_Bank = FSMC_Bank2_NAND;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_ECC = FSMC_ECC_Disable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_ECCPageSize = FSMC_ECCPageSize_256Bytes;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_TCLRSetupTime = 0x0;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_TARSetupTime = 0x0;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	  
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):   3. Declare a FSMC_PCCARDInitTypeDef structure, for example:
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):          FSMC_PCCARDInitTypeDef  FSMC_PCCARDInitStructure;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      and fill the FSMC_PCCARDInitStructure variable with the allowed values of
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      the structure member.
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):          FSMC_PCCARDInit(&FSMC_PCCARDInitStructure); 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the FSMC_PCCARDInitStruct.
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  FSMC_PCCARDInitStruct : pointer to a FSMC_PCCARDInitTypeDef structure
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WAIT_FEATURE(FSMC_PCCARDInitStruct->FSMC_Waitfeature));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_TCLR_TIME(FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_TAR_TIME(FSMC_PCCARDInitStruct->FSMC_TARSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime));
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);	
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime << 24);             
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each FSMC_PCCARDInitStruct member with its default value.
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  FSMC_PCCARDInitStruct: pointer to a FSMC_PCCARDInitTypeDef structure
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Reset PCCARD Init structure parameters values */
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime = 0x0;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_TARSetupTime = 0x0;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
Stm32f4xx_fsmc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  FSMC NOR/SRAM Init structure definition
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  FSMC_NORSRAMTimingInitTypeDef* FSMC_ReadWriteTimingStruct; /*!< Timing Parameters for write and read access if the  ExtendedMode is not used*/  
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  FSMC_NORSRAMTimingInitTypeDef* FSMC_WriteTimingStruct;     /*!< Timing Parameters for write access if the  ExtendedMode is used*/      
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  FSMC NAND Init structure definition
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_CommonSpaceTimingStruct;   /*!< FSMC Common Space Timing */ 
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_AttributeSpaceTimingStruct; /*!< FSMC Attribute Space Timing */
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  FSMC PCCARD Init structure definition
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_CommonSpaceTimingStruct; /*!< FSMC Common Space Timing */
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_AttributeSpaceTimingStruct;  /*!< FSMC Attribute Space Timing */ 
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_IOSpaceTimingStruct; /*!< FSMC IO Space Timing */  
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct);
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct);
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct);
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct);
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct);
Stm32f4xx_fsmc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct);
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_InitStruct.
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_AF))
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):        assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):        GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):        assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):        GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each GPIO_InitStruct member with its default value.
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Reset GPIO init structure parameters values */
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
Stm32f4xx_gpio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
Stm32f4xx_gpio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   GPIO Init structure definition  
Stm32f4xx_gpio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_gpio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct);
Stm32f4xx_gpio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct);
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the HASH_InitStruct structure.
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  HASH_InitStruct: pointer to a HASH_InitTypeDef structure that contains
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void HASH_Init(HASH_InitTypeDef* HASH_InitStruct)
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_HASH_ALGOSELECTION(HASH_InitStruct->HASH_AlgoSelection));
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_HASH_DATATYPE(HASH_InitStruct->HASH_DataType));
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_HASH_ALGOMODE(HASH_InitStruct->HASH_AlgoMode));
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               HASH_InitStruct->HASH_DataType | \
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               HASH_InitStruct->HASH_AlgoMode);
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if(HASH_InitStruct->HASH_AlgoMode == HASH_AlgoMode_HMAC) 
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_HASH_HMAC_KEYTYPE(HASH_InitStruct->HASH_HMACKeyType));
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each HASH_InitStruct member with its default value.
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  HASH_InitStruct : pointer to a HASH_InitTypeDef structure which will
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct)
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_InitStruct->HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_InitStruct->HASH_AlgoMode = HASH_AlgoMode_HASH;
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_InitStruct->HASH_DataType = HASH_DataType_32b;
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_InitStruct->HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @note   In MD5 mode, Data[4] filed of HASH_MsgDigest structure is not used
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  HASH_MessageDigest: pointer to a HASH_MsgDigest structure which will 
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  HASH_ContextSave: pointer to a HASH_Context structure that contains
Stm32f4xx_hash.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  HASH_ContextRestore: pointer to a HASH_Context structure that contains
Stm32f4xx_hash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief   HASH Init structure definition
Stm32f4xx_hash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_hash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  HASH message digest result structure definition  
Stm32f4xx_hash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_hash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  HASH context swapping structure definition  
Stm32f4xx_hash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_hash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void HASH_Init(HASH_InitTypeDef* HASH_InitStruct);
Stm32f4xx_hash.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct);
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_InitTypeDef MD5_HASH_InitStructure;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  MD5_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_MD5;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  MD5_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HASH;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  MD5_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_Init(&MD5_HASH_InitStructure);
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_InitTypeDef MD5_HASH_InitStructure;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  MD5_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_MD5;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  MD5_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HMAC;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  MD5_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    MD5_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_LongKey;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    MD5_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
Stm32f4xx_hash_md5.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_Init(&MD5_HASH_InitStructure);
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_InitTypeDef SHA1_HASH_InitStructure;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HASH;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_Init(&SHA1_HASH_InitStructure);
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_InitTypeDef SHA1_HASH_InitStructure;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HMAC;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_LongKey;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
Stm32f4xx_hash_sha1.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  HASH_Init(&SHA1_HASH_InitStructure);
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the I2C_InitStruct.
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that contains 
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2C_CLOCK_SPEED(I2C_InitStruct->I2C_ClockSpeed));
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2C_DUTY_CYCLE(I2C_InitStruct->I2C_DutyCycle));
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (I2C_InitStruct->I2C_ClockSpeed <= 100000)
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  else /*(I2C_InitStruct->I2C_ClockSpeed <= 400000)*/
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if (I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_2)
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 3));
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    else /*I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_16_9*/
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 25));
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2Cx->OAR1 = (I2C_InitStruct->I2C_AcknowledgedAddress | I2C_InitStruct->I2C_OwnAddress1);
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each I2C_InitStruct member with its default value.
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):/*---------------- Reset I2C init structure parameters values ----------------*/
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2C_InitStruct->I2C_ClockSpeed = 5000;
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2C_InitStruct->I2C_OwnAddress1 = 0;
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
Stm32f4xx_i2c.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
Stm32f4xx_i2c.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  I2C Init structure definition  
Stm32f4xx_i2c.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_i2c.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct);
Stm32f4xx_i2c.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct);
Stm32f4xx_pwr.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  PWR_STOPEntry: specifies if STOP mode in entered with WFI or WFE instruction.
Stm32f4xx_pwr.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *            @arg PWR_STOPEntry_WFI: enter STOP mode with WFI instruction
Stm32f4xx_pwr.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *            @arg PWR_STOPEntry_WFE: enter STOP mode with WFE instruction
Stm32f4xx_rcc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
Stm32f4xx_rcc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         must be called to update the structure's field. Otherwise, any
Stm32f4xx_rcc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):     be disabled prior to executing the WFI or WFE instructions. You can do this
Stm32f4xx_rcc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in RTC_InitStruct.
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure that contains 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):ErrorStatus RTC_Init(RTC_InitTypeDef* RTC_InitStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_RTC_HOUR_FORMAT(RTC_InitStruct->RTC_HourFormat));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_RTC_ASYNCH_PREDIV(RTC_InitStruct->RTC_AsynchPrediv));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_RTC_SYNCH_PREDIV(RTC_InitStruct->RTC_SynchPrediv));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC->CR |=  ((uint32_t)(RTC_InitStruct->RTC_HourFormat));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC->PRER = (uint32_t)(RTC_InitStruct->RTC_SynchPrediv);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each RTC_InitStruct member with its default value.
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure which will be 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void RTC_StructInit(RTC_InitTypeDef* RTC_InitStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_InitStruct->RTC_HourFormat = RTC_HourFormat_24;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_InitStruct->RTC_AsynchPrediv = (uint32_t)0x7F;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_InitStruct->RTC_SynchPrediv = (uint32_t)0xFF; 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that contains 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):ErrorStatus RTC_SetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_HOUR12(RTC_TimeStruct->RTC_Hours));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      RTC_TimeStruct->RTC_H12 = 0x00;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_HOUR24(RTC_TimeStruct->RTC_Hours));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_MINUTES(RTC_TimeStruct->RTC_Minutes));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_SECONDS(RTC_TimeStruct->RTC_Seconds));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      tmpreg = RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12)); 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      RTC_TimeStruct->RTC_H12 = 0x00;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours)));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes)));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds)));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             ((uint32_t)(RTC_TimeStruct->RTC_H12) << 16)); 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                   ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                   ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                   (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each RTC_TimeStruct member with its default value
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure which will be 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void RTC_TimeStructInit(RTC_TimeTypeDef* RTC_TimeStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_TimeStruct->RTC_H12 = RTC_H12_AM;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_TimeStruct->RTC_Hours = 0;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_TimeStruct->RTC_Minutes = 0;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_TimeStruct->RTC_Seconds = 0; 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that will 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void RTC_GetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Fill the structure fields with the read parameters */
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_TimeStruct->RTC_Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    /* Convert the structure parameters to Binary format */
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_TimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure that contains 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):ErrorStatus RTC_SetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if ((RTC_Format == RTC_Format_BIN) && ((RTC_DateStruct->RTC_Month & 0x10) == 0x10))
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_DateStruct->RTC_Month = (RTC_DateStruct->RTC_Month & (uint32_t)~(0x10)) + 0x0A;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_YEAR(RTC_DateStruct->RTC_Year));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_MONTH(RTC_DateStruct->RTC_Month));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_DATE(RTC_DateStruct->RTC_Date));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year)));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_RTC_WEEKDAY(RTC_DateStruct->RTC_WeekDay));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_DateStruct->RTC_Date) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              (((uint32_t)RTC_DateStruct->RTC_WeekDay) << 13)); 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each RTC_DateStruct member with its default value
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure which will be 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void RTC_DateStructInit(RTC_DateTypeDef* RTC_DateStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_DateStruct->RTC_WeekDay = RTC_Weekday_Monday;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_DateStruct->RTC_Date = 1;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_DateStruct->RTC_Month = RTC_Month_January;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_DateStruct->RTC_Year = 0;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param RTC_DateStruct: pointer to a RTC_DateTypeDef structure that will 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void RTC_GetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Fill the structure fields with the read parameters */
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_DateStruct->RTC_Year = (uint8_t)((tmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    /* Convert the structure parameters to Binary format */
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_DateStruct->RTC_Year = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void RTC_SetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_ALARM_MASK(RTC_AlarmStruct->RTC_AlarmMask));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_HOUR12(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_HOUR24(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_MINUTES(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_SECONDS(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours)));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes)));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):              ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each RTC_AlarmStruct member with its default value
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_AlarmStruct: pointer to a @ref RTC_AlarmTypeDef structure which
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void RTC_AlarmStructInit(RTC_AlarmTypeDef* RTC_AlarmStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = RTC_H12_AM;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = RTC_AlarmDateWeekDaySel_Date;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmMask = RTC_AlarmMask_None;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that will 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void RTC_GetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Fill the structure with the read parameters */
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_AlarmStruct->RTC_AlarmDateWeekDay = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param RTC_StampTimeStruct: pointer to a RTC_TimeTypeDef structure that will 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param RTC_StampDateStruct: pointer to a RTC_DateTypeDef structure that will 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void RTC_GetTimeStamp(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_StampTimeStruct, 
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                                      RTC_DateTypeDef* RTC_StampDateStruct)
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Fill the Time structure fields with the read parameters */
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_StampTimeStruct->RTC_Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Fill the Date structure fields with the read parameters */
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_StampDateStruct->RTC_Year = 0;
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    /* Convert the Time structure parameters to Binary format */
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_StampTimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Hours);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    /* Convert the Date structure parameters to Binary format */
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_StampDateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Month);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
Stm32f4xx_rtc.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  RTC Init structures definition  
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  RTC Time structure definition  
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  RTC Date structure definition  
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  RTC Alarm structure definition  
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):ErrorStatus RTC_Init(RTC_InitTypeDef* RTC_InitStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void RTC_StructInit(RTC_InitTypeDef* RTC_InitStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):ErrorStatus RTC_SetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void RTC_TimeStructInit(RTC_TimeTypeDef* RTC_TimeStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void RTC_GetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):ErrorStatus RTC_SetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void RTC_DateStructInit(RTC_DateTypeDef* RTC_DateStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void RTC_GetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void RTC_SetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void RTC_AlarmStructInit(RTC_AlarmTypeDef* RTC_AlarmStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void RTC_GetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct);
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void RTC_GetTimeStamp(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_StampTimeStruct,
Stm32f4xx_rtc.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):                                      RTC_DateTypeDef* RTC_StampDateStruct);
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *              First, user has to fill the command structure (pointer to
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *              a) First, user has to fill the data structure (pointer to
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *              a) First, user has to fill the data structure (pointer to
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the SDIO_InitStruct.
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each SDIO_InitStruct member with its default value.
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* SDIO_InitStruct members default value */
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_InitStruct->SDIO_ClockDiv = 0x00;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the SDIO_CmdInitStruct and send the command.
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         structure that contains the configuration information for the SDIO 
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):           | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each SDIO_CmdInitStruct member with its default value.
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         structure which will be initialized.
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* SDIO_CmdInitStruct members default value */
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_CmdInitStruct->SDIO_Argument = 0x00;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the SDIO_DataInitStruct.
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferDir
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):           | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each SDIO_DataInitStruct member with its default value.
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* SDIO_DataInitStruct members default value */
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_DataInitStruct->SDIO_DataLength = 0x00;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
Stm32f4xx_sdio.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
Stm32f4xx_sdio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_sdio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_sdio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_sdio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct);
Stm32f4xx_sdio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct);
Stm32f4xx_sdio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct);
Stm32f4xx_sdio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct);
Stm32f4xx_sdio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct);
Stm32f4xx_sdio.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct);
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *          I2S_StructInit(&I2SInitStruct);
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *          I2SInitStruct.Mode = I2S_Mode_MasterTx;     
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *          I2S_Init(SPI3, &I2SInitStruct);
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *          I2S_FullDuplexConfig(SPI3ext, &I2SInitStruct)
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the SPI_InitStruct.
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                  SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                  SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                  SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the I2S_InitStruct.
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      tmp = (uint16_t)(((((i2sclk / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):      tmp = (uint16_t)(((((i2sclk / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq)) + 5);
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPIx->I2SPR = (uint16_t)((uint16_t)i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCLKOutput));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Configure the I2S with the SPI_InitStruct values */
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(I2S_InitStruct->I2S_Mode | \
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                  (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataFormat | \
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                  (uint16_t)I2S_InitStruct->I2S_CPOL))));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each SPI_InitStruct member with its default value.
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure which will be initialized.
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):/*--------------- Reset SPI init structure parameters values -----------------*/
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  SPI_InitStruct->SPI_CRCPolynomial = 7;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each I2S_InitStruct member with its default value.
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  I2S_InitStruct: pointer to a I2S_InitTypeDef structure which will be initialized.
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):/*--------------- Reset I2S init structure parameters values -----------------*/
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         I2S_InitStruct.
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @note   The structure pointed by I2S_InitStruct parameter should be the same
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void I2S_FullDuplexConfig(SPI_TypeDef* I2Sxext, I2S_InitTypeDef* I2S_InitStruct)
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterTx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_SlaveTx))
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterRx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_SlaveRx))
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* Configure the I2S with the SPI_InitStruct values */
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                  (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataFormat | \
Stm32f4xx_spi.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                  (uint16_t)I2S_InitStruct->I2S_CPOL))));
Stm32f4xx_spi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  SPI Init structure definition  
Stm32f4xx_spi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_spi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  I2S Init structure definition  
Stm32f4xx_spi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_spi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct);
Stm32f4xx_spi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct);
Stm32f4xx_spi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct);
Stm32f4xx_spi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct);
Stm32f4xx_spi.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void I2S_FullDuplexConfig(SPI_TypeDef* I2Sxext, I2S_InitTypeDef* I2S_InitStruct);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         the specified parameters in the TIM_TimeBaseInitStruct.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         structure which will be initialized.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       3. Fill the TIM_OCInitStruct with the desired parameters including:
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         the TIM_OCInitStruct.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccer |= TIM_OCInitStruct->TIM_OutputState;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the TIM_OCInitStruct.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the TIM_OCInitStruct.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the TIM_OCInitStruct.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each TIM_OCInitStruct member with its default value.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_OCInitStruct->TIM_Pulse = 0x00000000;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       3. Fill the TIM_ICInitStruct with the desired parameters including:
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):          Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the TIM_ICInitStruct.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICSelection,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICFilter);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICSelection,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICFilter);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICSelection,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICFilter);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICSelection,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICFilter);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each TIM_ICInitStruct member with its default value.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_ICInitStruct->TIM_ICFilter = 0x00;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         in the TIM_ICInitStruct to measure an external PWM signal.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICFilter);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):               TIM_ICInitStruct->TIM_ICFilter);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):       2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):             TIM_BDTRInitStruct->TIM_AutomaticOutput;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each TIM_BDTRInitStruct member with its default value.
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
Stm32f4xx_tim.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  TIM Time Base Init structure definition  
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @note   This structure is used with all TIMx except for TIM6 and TIM7.  
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  TIM Output Compare Init structure definition  
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  TIM Input Capture Init structure definition  
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  BDTR structure definition 
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @note   This structure is used only with TIM1 and TIM8.    
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct);
Stm32f4xx_tim.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct);
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         parameters in the USART_InitStruct .
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure that contains
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):            USART_InitStruct->USART_Mode;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));    
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):    integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each USART_InitStruct member with its default value.
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure which will
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* USART_InitStruct members default value */
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_InitStruct->USART_BaudRate = 9600;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_InitStruct->USART_WordLength = USART_WordLength_8b;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_InitStruct->USART_StopBits = USART_StopBits_1;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_InitStruct->USART_Parity = USART_Parity_No ;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;  
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  *         specified parameters in the USART_ClockInitStruct .
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure that
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_CLOCK(USART_ClockInitStruct->USART_Clock));
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):                 USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @brief  Fills each USART_ClockInitStruct member with its default value.
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  /* USART_ClockInitStruct members default value */
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_ClockInitStruct->USART_Clock = USART_Clock_Disable;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_ClockInitStruct->USART_CPOL = USART_CPOL_Low;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_ClockInitStruct->USART_CPHA = USART_CPHA_1Edge;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  USART_ClockInitStruct->USART_LastBit = USART_LastBit_Disable;
Stm32f4xx_usart.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\src):  When a transmission is taking place, a write instruction to the USART_DR register 
Stm32f4xx_usart.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  USART Init Structure definition  
Stm32f4xx_usart.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_usart.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):                                            - IntegerDivider = ((PCLKx) / (8 * (OVR8+1) * (USART_InitStruct->USART_BaudRate)))
Stm32f4xx_usart.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):  * @brief  USART Clock Init Structure definition  
Stm32f4xx_usart.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):typedef struct
Stm32f4xx_usart.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct);
Stm32f4xx_usart.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void USART_StructInit(USART_InitTypeDef* USART_InitStruct);
Stm32f4xx_usart.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct);
Stm32f4xx_usart.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\stm32f4xx_stdperiph_driver\inc):void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitTypeDef GPIO_InitStructure;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = DEBUG_UART1TX | DEBUG_UART1RX;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(DEBUG_UART1_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = CAN1_TX | CAN1_RX;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(CAN1_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = CAN2_TX | CAN2_RX;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(CAN2_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = UART2TX_EXYNOS1 | UART2RX_EXYNOS1;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(UART2_EXYNOS1_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = UART4TX_EXYNOS3 | UART4RX_EXYNOS3;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(UART4_EXYNOS3_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = EXYNOS_PWR_CTRL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(EXYNOS_PWR_CTRL_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = EXYNOS_PMIC_CTRL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(EXYNOS_PMIC_CTRL_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = SFLASH_SPI1_CS | SFLASH_SPI1_SCK | SFLASH_SPI1_MISO | SFLASH_SPI1_MOSI;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(SFLASH_SPI1_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = SFLASH_HOLD | SFLASH_WP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(SFLASH_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = TW8832_I2C2_SCL | TW8832_I2C2_SDA;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(TW8832_I2C2_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = TW8832_SFLASH_SPI2_CS | TW8832_SFLASH_SPI2_SCK | TW8832_SFLASH_SPI2_MISO | TW8832_SFLASH_SPI2_MOSI;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(TW8832_SFLASH_SPI2_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = HW_VERSION;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AN;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(HW_VERSION_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = KeySW0 | KeySW1 | KeySW2 | KeySW3 | KeySW4;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_IN;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(KeySWx_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = PWR_IGMON;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_IN;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(PWR_IGMON_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = PWR_CTRL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(PWR_CTRL_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = LCDPWR_CTRL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(LCDPWR_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = FW_UPDATE;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_IN;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(FW_UPDATE_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = LCDBL_PWM;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(LCDBL_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = LCDBL_CTRL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(LCDBL_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = LCD_STM32;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(LCD_STM32_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = LCD_EXYNOS;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(LCD_EXYNOS_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = BUZZER_CTRL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(BUZZER_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = LED_CTRL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(LED_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = FM31X4_I2C1_SCL | FM31X4_I2C1_SDA;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(FM31X4_I2C1_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = TW2835_IRQ| TW2835_HALE | TW2835_HSPB;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(TW2835_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = DPRAM_INT | DPRAM_ADVL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(DPRAM_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = CAMERA_nRESET;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(CAMERA_nRESET_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_10| GPIO_Pin_9  | GPIO_Pin_8 | GPIO_Pin_1 |
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOD, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_15 | GPIO_Pin_14 | GPIO_Pin_13 | GPIO_Pin_12 |
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOE, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_15 | GPIO_Pin_14 | GPIO_Pin_13 | GPIO_Pin_12 |
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOF, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_14 | GPIO_Pin_13 | GPIO_Pin_5 |
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOG, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_13 | GPIO_Pin_12 | GPIO_Pin_11;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOD, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_2 | GPIO_Pin_6 | GPIO_Pin_5 | GPIO_Pin_4 | GPIO_Pin_3;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOE, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin = FSMC_nOE | FSMC_nWE | FSMC_nWAIT | FSMC_nCLK;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(FSMC_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin = FSMC_nBL0 | FSMC_nBL1;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(FSMC_nBL_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin = FSMC_nNE1;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(FSMC_nNE1_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin = FSMC_nNE2;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(FSMC_nNE2_PORT, &GPIO_InitStructure);    
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin = FSMC_nNE3;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(FSMC_nNE3_PORT, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin = FSMC_nNE4;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(FSMC_nNE4_PORT, &GPIO_InitStructure);    
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitTypeDef GPIO_InitStructure;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_2;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOC, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_8;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOC, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_7;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOB, &GPIO_InitStructure);
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_15;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
System_Init.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    GPIO_Init(GPIOC, &GPIO_InitStructure);
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  *        Instruction cache                      | ON
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):    /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM2;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_MemoryType = FSMC_MemoryType_PSRAM;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;  
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &p;
system_stm32f4xx - Org.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\libraries\cmsis\device\st\stm32f4xx\source\templates):  FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &p;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  *        Instruction cache                      | ON
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):    /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM2;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_MemoryType = FSMC_MemoryType_PSRAM;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;  
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &p;
System_stm32f4xx.c (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\src):  FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &p;
TimeDelay.h (c:\tools\iar systems\embedded workbench 6.5\workspace\wl9f_display_iap\platform\inc):typedef struct 
