###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.1.4415/W32 for ARM      26/Feb/2013  16:44:36 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Tools\IAR Systems\Embedded Workbench                  #
#                    6.5\WorkSpace\WL9F_Display_IAP\Platform\SRC\stm32f4xx_it #
#                    .c                                                       #
#    Command line =  "C:\Tools\IAR Systems\Embedded Workbench                 #
#                    6.5\WorkSpace\WL9F_Display_IAP\Platform\SRC\stm32f4xx_it #
#                    .c" -D USE_STDPERIPH_DRIVER -D STM32F4XX -D              #
#                    USE_STM324xG_EVAL -lcN "C:\Tools\IAR Systems\Embedded    #
#                    Workbench 6.5\WorkSpace\WL9F_Display_IAP\Project\Debug\L #
#                    ist\" -o "C:\Tools\IAR Systems\Embedded Workbench        #
#                    6.5\WorkSpace\WL9F_Display_IAP\Project\Debug\Obj\"       #
#                    --debug --endian=little --cpu=Cortex-M4 -e               #
#                    --fpu=VFPv4_sp --dlib_config "C:\Tools\IAR               #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I "C:\Tools\IAR Systems\Embedded Workbench         #
#                    6.5\WorkSpace\WL9F_Display_IAP\Project\..\Platform\INC\" #
#                     -I "C:\Tools\IAR Systems\Embedded Workbench             #
#                    6.5\WorkSpace\WL9F_Display_IAP\Project\..\Libraries\CMSI #
#                    S\Device\ST\STM32F4xx\Include\" -I "C:\Tools\IAR         #
#                    Systems\Embedded Workbench 6.5\WorkSpace\WL9F_Display_IA #
#                    P\Project\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\"  #
#                    -I "C:\Tools\IAR Systems\Embedded Workbench              #
#                    6.5\WorkSpace\WL9F_Display_IAP\Project\..\Utilities\STM3 #
#                    2_EVAL\Common\" -I "C:\Tools\IAR Systems\Embedded        #
#                    Workbench 6.5\WorkSpace\WL9F_Display_IAP\Project\..\Util #
#                    ities\STM32_EVAL\STM3240_41_G_EVAL\" -Oh                 #
#                    --use_c++_inline -I "C:\Tools\IAR Systems\Embedded       #
#                    Workbench 6.5\arm\CMSIS\Include\"                        #
#    List file    =  C:\Tools\IAR Systems\Embedded Workbench                  #
#                    6.5\WorkSpace\WL9F_Display_IAP\Project\Debug\List\stm32f #
#                    4xx_it.lst                                               #
#    Object file  =  C:\Tools\IAR Systems\Embedded Workbench                  #
#                    6.5\WorkSpace\WL9F_Display_IAP\Project\Debug\Obj\stm32f4 #
#                    xx_it.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Tools\IAR Systems\Embedded Workbench 6.5\WorkSpace\WL9F_Display_IAP\Platform\SRC\stm32f4xx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    STM32F4xx_IAP/src/stm32f4xx_it.c 
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    10-October-2011
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and 
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            ******************************************************************************
     22            */ 
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm32f4xx_it.h"
     26          
     27          /** @addtogroup STM32F4xx_IAP
     28            * @{
     29            */
     30          
     31          /* Private typedef -----------------------------------------------------------*/
     32          /* Private define ------------------------------------------------------------*/
     33          /* Private macro -------------------------------------------------------------*/
     34          /* Private variables ---------------------------------------------------------*/
     35          /* Private function prototypes -----------------------------------------------*/
     36          /* Private functions ---------------------------------------------------------*/
     37          
     38          /******************************************************************************/
     39          /*            Cortex-M4 Processor Exceptions Handlers                         */
     40          /******************************************************************************/
     41          
     42          /**
     43            * @brief   This function handles NMI exception.
     44            * @param  None
     45            * @retval None
     46            */
     47          void NMI_Handler(void)
     48          {
     49          }
     50          
     51          /**
     52            * @brief  This function handles Hard Fault exception.
     53            * @param  None
     54            * @retval None
     55            */
     56          void HardFault_Handler(void)
     57          {
     58            /* Go to infinite loop when Hard Fault exception occurs */
     59            while (1)
     60            {
     61            }
     62          }
     63          
     64          /**
     65            * @brief  This function handles Memory Manage exception.
     66            * @param  None
     67            * @retval None
     68            */
     69          void MemManage_Handler(void)
     70          {
     71            /* Go to infinite loop when Memory Manage exception occurs */
     72            while (1)
     73            {
     74            }
     75          }
     76          
     77          /**
     78            * @brief  This function handles Bus Fault exception.
     79            * @param  None
     80            * @retval None
     81            */
     82          void BusFault_Handler(void)
     83          {
     84            /* Go to infinite loop when Bus Fault exception occurs */
     85            while (1)
     86            {
     87            }
     88          }
     89          
     90          /**
     91            * @brief  This function handles Usage Fault exception.
     92            * @param  None
     93            * @retval None
     94            */
     95          void UsageFault_Handler(void)
     96          {
     97            /* Go to infinite loop when Usage Fault exception occurs */
     98            while (1)
     99            {
    100            }
    101          }
    102          
    103          /**
    104            * @brief  This function handles SVCall exception.
    105            * @param  None
    106            * @retval None
    107            */
    108          void SVC_Handler(void)
    109          {
    110          }
    111          
    112          /**
    113            * @brief  This function handles Debug Monitor exception.
    114            * @param  None
    115            * @retval None
    116            */
    117          void DebugMon_Handler(void)
    118          {
    119          }
    120          
    121          /**
    122            * @brief  This function handles PendSVC exception.
    123            * @param  None
    124            * @retval None
    125            */
    126          void PendSV_Handler(void)
    127          {
    128          }
    129          
    130          /**
    131            * @brief  This function handles SysTick Handler.
    132            * @param  None
    133            * @retval None
    134            */
    135          void SysTick_Handler(void)
    136          {
    137          }
    138          
    139          /******************************************************************************/
    140          /*                 STM32F4xx Peripherals Interrupt Handlers                   */
    141          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    142          /*  available peripheral interrupt handler's name please refer to the startup */
    143          /*  file (startup_stm32f4xx.s).                                               */
    144          /******************************************************************************/
    145          
    146          /**
    147            * @brief  This function handles PPP interrupt request.
    148            * @param  None
    149            * @retval None
    150            */
    151          /*void PPP_IRQHandler(void)
    152          {
    153          }*/
    154          
    155          /**
    156            * @}
    157            */ 
    158          
    159          
    160          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DebugMon_Handler
       0   HardFault_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   PendSV_Handler
       0   SVC_Handler
       0   SysTick_Handler
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  BusFault_Handler
       2  DebugMon_Handler
       2  HardFault_Handler
       2  MemManage_Handler
       2  NMI_Handler
       2  PendSV_Handler
       2  SVC_Handler
       2  SysTick_Handler
       2  UsageFault_Handler

 
 18 bytes in section .text
 
 18 bytes of CODE memory

Errors: none
Warnings: none
