###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.1.4415/W32 for ARM      23/Jan/2017  15:41:02 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pla #
#                    tform\SRC\stm32f4xx_it.c                                 #
#    Command line =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pla #
#                    tform\SRC\stm32f4xx_it.c -D USE_STDPERIPH_DRIVER -D      #
#                    STM32F4XX -D USE_STM324xG_EVAL -D USE_FULL_ASSERT -lcN   #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\Debug\List\ -o D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_M #
#                    ONITOR_STM32_IAP\Project\Debug\Obj\ --debug              #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp        #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32 #
#                    _IAP\Project\..\Platform\INC\ -I                         #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\ -I  #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\ -I     #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\..\Utilities\STM32_EVAL\Common\ -I                  #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\ -Oh      #
#                    --use_c++_inline -I "C:\Program Files (x86)\IAR          #
#                    Systems\Embedded Workbench 6.5\arm\CMSIS\Include\"       #
#    List file    =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\Debug\List\stm32f4xx_it.lst                         #
#    Object file  =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\Debug\Obj\stm32f4xx_it.o                            #
#                                                                             #
#                                                                             #
###############################################################################

D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Platform\SRC\stm32f4xx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    STM32F4xx_IAP/src/stm32f4xx_it.c 
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    10-October-2011
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and 
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            ******************************************************************************
     22            */ 
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm32f4xx_it.h"
     26          #include "WL9F_Display_IAP.h"	//	++, --, kutelf, 130222
     27          
     28          /** @addtogroup STM32F4xx_IAP
     29            * @{
     30            */
     31          
     32          /* Private typedef -----------------------------------------------------------*/
     33          /* Private define ------------------------------------------------------------*/
     34          /* Private macro -------------------------------------------------------------*/
     35          /* Private variables ---------------------------------------------------------*/
     36          /* Private function prototypes -----------------------------------------------*/
     37          /* Private functions ---------------------------------------------------------*/
     38          
     39          /******************************************************************************/
     40          /*            Cortex-M4 Processor Exceptions Handlers                         */
     41          /******************************************************************************/
     42          
     43          /**
     44            * @brief   This function handles NMI exception.
     45            * @param  None
     46            * @retval None
     47            */
     48          void NMI_Handler(void)
     49          {
     50          }
     51          
     52          /**
     53            * @brief  This function handles Hard Fault exception.
     54            * @param  None
     55            * @retval None
     56            */
     57          void HardFault_Handler(void)
     58          {
     59            /* Go to infinite loop when Hard Fault exception occurs */
     60            while (1)
     61            {
     62            }
     63          }
     64          
     65          /**
     66            * @brief  This function handles Memory Manage exception.
     67            * @param  None
     68            * @retval None
     69            */
     70          void MemManage_Handler(void)
     71          {
     72            /* Go to infinite loop when Memory Manage exception occurs */
     73            while (1)
     74            {
     75            }
     76          }
     77          
     78          /**
     79            * @brief  This function handles Bus Fault exception.
     80            * @param  None
     81            * @retval None
     82            */
     83          void BusFault_Handler(void)
     84          {
     85            /* Go to infinite loop when Bus Fault exception occurs */
     86            while (1)
     87            {
     88            }
     89          }
     90          
     91          /**
     92            * @brief  This function handles Usage Fault exception.
     93            * @param  None
     94            * @retval None
     95            */
     96          void UsageFault_Handler(void)
     97          {
     98            /* Go to infinite loop when Usage Fault exception occurs */
     99            while (1)
    100            {
    101            }
    102          }
    103          
    104          /**
    105            * @brief  This function handles SVCall exception.
    106            * @param  None
    107            * @retval None
    108            */
    109          void SVC_Handler(void)
    110          {
    111          }
    112          
    113          /**
    114            * @brief  This function handles Debug Monitor exception.
    115            * @param  None
    116            * @retval None
    117            */
    118          void DebugMon_Handler(void)
    119          {
    120          }
    121          
    122          /**
    123            * @brief  This function handles PendSVC exception.
    124            * @param  None
    125            * @retval None
    126            */
    127          void PendSV_Handler(void)
    128          {
    129          }
    130          
    131          /**
    132            * @brief  This function handles SysTick Handler.
    133            * @param  None
    134            * @retval None
    135            */
    136          void SysTick_Handler(void)
    137          {
    138          	//	++, kutelf, 130222
    139          	//	Time Delay 함수 추가. 
    140          	TimeDelay_Decrement();
    141          	//	--, kutelf, 130222
    142          }
    143          
    144          /******************************************************************************/
    145          /*                 STM32F4xx Peripherals Interrupt Handlers                   */
    146          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    147          /*  available peripheral interrupt handler's name please refer to the startup */
    148          /*  file (startup_stm32f4xx.s).                                               */
    149          /******************************************************************************/
    150          
    151          /**
    152            * @brief  This function handles PPP interrupt request.
    153            * @param  None
    154            * @retval None
    155            */
    156          /*void PPP_IRQHandler(void)
    157          {
    158          }*/
    159          
    160          /**
    161            * @}
    162            */ 
    163          
    164          
    165          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DebugMon_Handler
       0   HardFault_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   PendSV_Handler
       0   SVC_Handler
       0   SysTick_Handler
         0   -> TimeDelay_Decrement
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  BusFault_Handler
       2  DebugMon_Handler
       2  HardFault_Handler
       2  MemManage_Handler
       2  NMI_Handler
       2  PendSV_Handler
       2  SVC_Handler
       4  SysTick_Handler
       2  UsageFault_Handler

 
 20 bytes in section .text
 
 20 bytes of CODE memory

Errors: none
Warnings: none
