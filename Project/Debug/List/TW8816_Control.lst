###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.1.4415/W32 for ARM      23/Jan/2017  15:40:55 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pla #
#                    tform\SRC\TW8816_Control.c                               #
#    Command line =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pla #
#                    tform\SRC\TW8816_Control.c -D USE_STDPERIPH_DRIVER -D    #
#                    STM32F4XX -D USE_STM324xG_EVAL -D USE_FULL_ASSERT -lcN   #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\Debug\List\ -o D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_M #
#                    ONITOR_STM32_IAP\Project\Debug\Obj\ --debug              #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp        #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32 #
#                    _IAP\Project\..\Platform\INC\ -I                         #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\ -I  #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\ -I     #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\..\Utilities\STM32_EVAL\Common\ -I                  #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\ -Oh      #
#                    --use_c++_inline -I "C:\Program Files (x86)\IAR          #
#                    Systems\Embedded Workbench 6.5\arm\CMSIS\Include\"       #
#    List file    =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\Debug\List\TW8816_Control.lst                       #
#    Object file  =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Pro #
#                    ject\Debug\Obj\TW8816_Control.o                          #
#                                                                             #
#                                                                             #
###############################################################################

D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_IAP\Platform\SRC\TW8816_Control.c
      1          /**
      2            ******************************************************************************
      3            * @file    TW8816_Control.c 
      4            * @author  kutelf (kutelf@taeha.co.kr)
      5            * @version V1.0.0
      6            * @date    02/22/2013
      7            * @brief   TW8816_Control.c module
      8            *
      9            * Project Name       : WL9F Monitor APP
     10            * Project Enviroment : IAREmbedded Workbench for ARM 6.5x 
     11            *                      STM32F407ZGT6 Firmware Library
     12            * Project Workspace  : WL9F_Monitor_APP
     13            * MCU Type           : STM32F407ZGT6
     14            *
     15            * TAEHA MECHATRONICS Co., Ltd (http://www.taeha.co.kr)				
     16            * ECS Division R&D Center. / Author by Young-Min Han (kutelf@taeha.co.kr)
     17            * 
     18            ******************************************************************************
     19            */ 
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          #include "WL9F_Monitor_IAP.h"	
     23          
     24          /* Private typedef -----------------------------------------------------------*/
     25          /* Private define ------------------------------------------------------------*/
     26          /* Private macro -------------------------------------------------------------*/
     27          /* Private variables ---------------------------------------------------------*/
     28          
     29          // ++, sys3215, 141211
     30          extern u8 Hardware_Revision;
     31          // --, sys3215, 141211
     32          
     33          #if 0
     34          u8 InitCVBSAll_8816[] = 
     35          {
     36          	
     37          	0xFF,0x0,	//Page 0
     38          	0x0,0x22,	
     39          	0x1,0x93,	
     40          	0x2,0x40,	
     41          	0x3,0x0,	
     42          	0x4,0x0,	
     43          	0x5,0x8D,	
     44          	0x6,0x3,	
     45          	0x7,0x2,	
     46          	0x8,0x14,	
     47          	0x9,0xF3,	
     48          	0x0A,0x0F,	
     49          	0x0B,0xD0,	
     50          	0x0C,0xDC,	
     51          	0x0D,0x15,	
     52          	0x0E,0x80,	
     53          	0x0F,0x0,	
     54          	0x10,0x0,	
     55          	0x11,0x5C,	
     56          	0x12,0x13,	
     57          	0x13,0x80,	
     58          	0x14,0x80,	
     59          	0x15,0x0,	
     60          	0x16,0xC3,	
     61          	0x17,0x30,	
     62          	0x18,0x44,	
     63          	0x19,0x0,	
     64          	0x1A,0x90,	
     65          	0x1B,0x0,	
     66          	0x1C,0x27,	
     67          	0x1D,0x7F,	
     68          	0x1E,0x8,	
     69          	0x1F,0x0,	
     70          	0x20,0x50,	
     71          	0x21,0x42,	
     72          	0x22,0xF0,	
     73          	0x23,0xD8,	
     74          	0x24,0xBC,	
     75          	0x25,0xB8,	
     76          	0x26,0x44,	
     77          	0x27,0x2A,	
     78          	0x28,0x0,	
     79          	0x29,0x0,	
     80          	0x2A,0x78,	
     81          	0x2B,0x44,	
     82          	0x2C,0x30,	
     83          	0x2D,0x4,	
     84          	0x2E,0xA5,	
     85          	0x2F,0xE0,	
     86          	0x30,0x10,	
     87          	0x31,0x0,	
     88          	0x32,0x0,	
     89          	0x33,0x5,	
     90          	0x34,0x9A,	
     91          	0x35,0x30,	
     92          	0x36,0x0,	
     93          	0x37,0x0,	
     94          	0x38,0x8E,	
     95          	0x39,0x0,	
     96          	0x3A,0x0,	
     97          	0x3B,0x0,	
     98          	0x3C,0x0,	
     99          	0x3D,0x0,	
    100          	0x3E,0x0,	
    101          	0x3F,0x0,	
    102          	0x40,0x0,	
    103          	0x41,0x20,	
    104          	0x42,0x4,	
    105          	0x43,0x22,	
    106          	0x44,0x18,	
    107          	0x45,0x50,	
    108          	0x46,0x20,	
    109          	0x47,0x0,	
    110          	0x48,0xCF,	
    111          	0x49,0x61,	
    112          	0x4A,0x13,	
    113          	0x4B,0x13,	
    114          	0x4C,0x0,	
    115          	0x4D,0x30,	
    116          	0x4E,0x0,	
    117          	0x4F,0x0,	
    118          	0x50,0x0,	
    119          	0x51,0x20,	
    120          	0x52,0xFF,	
    121          	0x53,0x10,	
    122          	0x54,0x20,	
    123          	0x55,0xFA,	
    124          	0x56,0x0,	
    125          	0x57,0x0,	
    126          	0x58,0x0,	
    127          	0x59,0x0,	
    128          	0x5A,0x0,	
    129          	0x5B,0x30,	
    130          	0x5C,0x0,	
    131          	0x5D,0x30,	
    132          	0x5E,0x0,	
    133          	0x5F,0x0,	
    134          	0x60,0xE3,	
    135          	0x61,0x80,	
    136          	0x62,0x80,	
    137          	0x63,0x0,	
    138          	0x64,0x0,	
    139          	0x65,0x80,	
    140          	0x66,0x0,	
    141          	0x67,0x0,	
    142          	0x68,0x0,	
    143          	0x69,0x0,	
    144          	0x6A,0x0,	
    145          	0x6B,0x0,	
    146          	0x6C,0x0,	
    147          	0x6D,0x0,	
    148          	0x6E,0x0,	
    149          	0x6F,0x0,	
    150          	0x70,0x60,	
    151          	0x71,0x80,	
    152          	0x72,0x80,	
    153          	0x73,0x80,	
    154          	0x74,0x80,	
    155          	0x75,0x80,	
    156          	0x76,0x80,	
    157          	0x77,0x3F,	
    158          	0x78,0x0A,	
    159          	0x79,0x0,	
    160          	0x7A,0x30,	
    161          	0x7B,0x0,	
    162          	0x7C,0x1C,	
    163          	0x7D,0x8,	
    164          	0x7E,0xF6,	
    165          	0x7F,0x8,	
    166          	0x80,0x10,	
    167          	0x81,0x0D,	
    168          	0x82,0x3,	
    169          	0x83,0x0,	
    170          	0x84,0x67,	
    171          	0x85,0x94,	
    172          	0x86,0x18,	
    173          	0x87,0xE8,	
    174          	0x88,0xCA,	
    175          	0x89,0x2,	
    176          	0x8A,0x0A,	
    177          	0x8B,0x4,	
    178          	0x8C,0x0,	
    179          	0x8D,0x0,	
    180          	0x8E,0x0,	
    181          	0x8F,0x0,	
    182          	0x90,0x0,	
    183          	0x91,0x6,	
    184          	0x92,0x6,	
    185          	0x93,0x6,	
    186          	0x94,0x0,	
    187          	0x95,0x40,	
    188          	0x96,0x0,	
    189          	0x97,0x0,	
    190          	0x98,0x0,	
    191          	0x99,0x8,	
    192          	0x9A,0x0,	
    193          	0x9B,0x31,	
    194          	0x9C,0x0,	
    195          	0x9D,0x0,	
    196          	0x9E,0x0,	
    197          	0x9F,0x0,	
    198          	0xA0,0x0,	
    199          	0xA1,0x0,	
    200          	0xA2,0x0,	
    201          	0xA3,0x0,	
    202          	0xA4,0x0,	
    203          	0xA5,0xE0,	
    204          	0xA6,0x0,	
    205          	0xA7,0x0,	
    206          	0xA8,0x0,	
    207          	0xA9,0x0,	
    208          	0xAA,0x0,	
    209          	0xAB,0x0,	
    210          	0xAC,0x0,	
    211          	0xAD,0x0,	
    212          	0xAE,0x0,	
    213          	0xAF,0x0,	
    214          	0xB0,0x40,	
    215          	0xB1,0x0,	
    216          	0xB2,0xCC,	
    217          	0xB3,0x1,	
    218          	0xB4,0x10,	
    219          	0xB5,0x20,	
    220          	0xB6,0x33,	
    221          	0xB7,0x12,	
    222          	0xB8,0x1,	
    223          	0xB9,0x29,	
    224          	0xBA,0xE0,	
    225          	0xBB,0x12,	
    226          	0xBC,0x0,	
    227          	0xBD,0x0C,	
    228          	0xBE,0xC2,	
    229          	0xBF,0x0,	
    230          	0xC0,0x0,	
    231          	0xC1,0x0,	
    232          	0xC2,0x0,	
    233          	0xC3,0x0,	
    234          	0xC4,0x40,	
    235          	0xC5,0x0,	
    236          	0xC6,0x0,	
    237          	0xC7,0x0,	
    238          	0xC8,0x0,	
    239          	0xC9,0x0,	
    240          	0xCA,0x0,	
    241          	0xCB,0x0,	
    242          	0xCC,0x0,	
    243          	0xCD,0x0,	
    244          	0xCE,0x0,	
    245          	0xCF,0x0,	
    246          	0xD0,0xC9,	
    247          	0xD1,0x4C,	
    248          	0xD2,0xFF,	
    249          	0xD3,0x7,	
    250          	0xD4,0x0,	
    251          	0xD5,0x3F,	
    252          	0xD6,0x0,	
    253          	0xD7,0x0,	
    254          	0xD8,0x0,	
    255          	0xD9,0x0,	
    256          	0xDA,0x3D,	
    257          	0xDB,0xC3,	
    258          	0xDC,0xFC,	
    259          	0xDD,0x0,	
    260          	0xDE,0x0,	
    261          	0xDF,0x0,	
    262          	0xE0,0x0,	
    263          	0xE1,0x0,	
    264          	0xE2,0x0,	
    265          	0xE3,0x0,	
    266          	0xE4,0x0,	
    267          	0xE5,0x0,	
    268          	0xE6,0x0,	
    269          	0xE7,0x0,	
    270          	0xE8,0x0,	
    271          	0xE9,0x0,	
    272          	0xEA,0x0,	
    273          	0xEB,0x0,	
    274          	0xEC,0x0,	
    275          	0xED,0x0,	
    276          	0xEE,0x0,	
    277          	0xEF,0x0,	
    278          	0xF0,0x0,	
    279          	0xF1,0x20,	
    280          	0xF2,0x0,	
    281          	0xF3,0x0,	
    282          	0xF4,0x16,	
    283          	0xF5,0x0,	
    284          	0xF6,0x0,	
    285          	0xF7,0x0,	
    286          	0xF8,0x0,	
    287          	0xF9,0x20,	
    288          	0xFA,0x90,	
    289          	0xFB,0x0,	
    290          	0xFC,0x40,	
    291          	0xFD,0x34,	
    292          	0xFE,0x0,	
    293          	0xFF,0x0,	
    294          	
    295          	0xFF,0x1,	//Page 1
    296          	0x0,0x0,	
    297          	0x1,0x40,	
    298          	0x2,0xBF,	
    299          	0x3,0x86,	
    300          	0x4,0x0,	
    301          	0x5,0x0,	
    302          	0x6,0x0,	
    303          	0x7,0x0,	
    304          	0x8,0x0,	
    305          	0x9,0x0,	
    306          	0x0A,0x0,	
    307          	0x0B,0x0,	
    308          	0x0C,0x0,	
    309          	0x0D,0x0,	
    310          	0x0E,0x0,	
    311          	0x0F,0x0,	
    312          	0x10,0x0,	
    313          	0x11,0x0,	
    314          	0x12,0x0,	
    315          	0x13,0x0,	
    316          	0x14,0x0,	
    317          	0x15,0x0,	
    318          	0x16,0x0,	
    319          	0x17,0x0,	
    320          	0x18,0x0,	
    321          	0x19,0x0,	
    322          	0x1A,0x0,	
    323          	0x1B,0x0,	
    324          	0x1C,0x0,	
    325          	0x1D,0x0,	
    326          	0x1E,0x0,	
    327          	0x1F,0x0,	
    328          	0x20,0x0,	
    329          	0x21,0x0,	
    330          	0x22,0x0,	
    331          	0x23,0x0,	
    332          	0x24,0x0,	
    333          	0x25,0x0,	
    334          	0x26,0x0,	
    335          	0x27,0x0,	
    336          	0x28,0x0,	
    337          	0x29,0x0,	
    338          	0x2A,0x0,	
    339          	0x2B,0x0,	
    340          	0x2C,0x0,	
    341          	0x2D,0x0,	
    342          	0x2E,0x0,	
    343          	0x2F,0x0,	
    344          	0x30,0xF2,	
    345          	0x31,0xAD,	
    346          	0x32,0x4,	
    347          	0x33,0x80,	
    348          	0x34,0x84,	
    349          	0x35,0x0,	
    350          	0x36,0x20,	
    351          	0x37,0x0,	
    352          	0x38,0x0,	
    353          	0x39,0x0,	
    354          	0x3A,0x0,	
    355          	0x3B,0x0,	
    356          	0x3C,0x0,	
    357          	0x3D,0x0,	
    358          	0x3E,0x0,	
    359          	0x3F,0x0,	
    360          	0x40,0x0,	
    361          	0x41,0x0,	
    362          	0x42,0xEE,	
    363          	0x43,0x0,	
    364          	0x44,0x0,	
    365          	0x45,0x0,	
    366          	0x46,0x0,	
    367          	0x47,0x0,	
    368          	0x48,0x0,	
    369          	0x49,0x0,	
    370          	0x4A,0x0,	
    371          	0x4B,0x0,	
    372          	0x4C,0x0,	
    373          	0x4D,0x0,	
    374          	0x4E,0x0,	
    375          	0x4F,0x0,	
    376          	0x50,0x0,	
    377          	0x51,0x0,	
    378          	0x52,0x0,	
    379          	0x53,0x0,	
    380          	0x54,0x0,	
    381          	0x55,0x0,	
    382          	0x56,0x0,	
    383          	0x57,0x41,	
    384          	0x58,0x2,	
    385          	0x59,0x0,	
    386          	0x5A,0x0,	
    387          	0x5B,0x0,	
    388          	0x5C,0x0,	
    389          	0x5D,0x0,	
    390          	0x5E,0x0,	
    391          	0x5F,0x0,	
    392          	0x60,0x0,	
    393          	0x61,0x0,	
    394          	0x62,0x0,	
    395          	0x63,0x0,	
    396          	0x64,0x0,	
    397          	0x65,0x0,	
    398          	0x66,0x0,	
    399          	0x67,0x0,	
    400          	0x68,0x0,	
    401          	0x69,0x0,	
    402          	0x6A,0x0,	
    403          	0x6B,0x0,	
    404          	0x6C,0x0,	
    405          	0x6D,0x0,	
    406          	0x6E,0x0,	
    407          	0x6F,0x0,	
    408          	0x70,0x0,	
    409          	0x71,0x0,	
    410          	0x72,0x0,	
    411          	0x73,0x0,	
    412          	0x74,0x0,	
    413          	0x75,0x0,	
    414          	0x76,0x0,	
    415          	0x77,0x5A,	
    416          	0x78,0x0,	
    417          	0x79,0x7F,	
    418          	0x7A,0x1,	
    419          	0x7B,0x0E,	
    420          	0x7C,0x0,	
    421          	0x7D,0x20,	
    422          	0x7E,0x1,	
    423          	0x7F,0xE2,	
    424          	0x80,0x0,	
    425          	0x81,0x0,	
    426          	0x82,0x7,	
    427          	0x83,0x1F,	
    428          	0x84,0x64,	
    429          	0x85,0x0,	
    430          	0x86,0x0,	
    431          	0x87,0x0,	
    432          	0x88,0x0,	
    433          	0x89,0x0,	
    434          	0x8A,0x2,	
    435          	0x8B,0x4D,	
    436          	0x8C,0x0,	
    437          	0x8D,0x0,	
    438          	0x8E,0x2,	
    439          	0x8F,0x0E,	
    440          	0x90,0x3,	
    441          	0x91,0x59,	
    442          	0x92,0x3,	
    443          	0x93,0x57,	
    444          	0x94,0x0,	
    445          	0x95,0x1,	
    446          	0x96,0x0,	
    447          	0x97,0x0,	
    448          	0x98,0x0,	
    449          	0x99,0x0,	
    450          	0x9A,0x0,	
    451          	0x9B,0x36,	
    452          	0x9C,0x0,	
    453          	0x9D,0x1,	
    454          	0x9E,0x0,	
    455          	0x9F,0x0,	
    456          	0xA0,0x2,	
    457          	0xA1,0x68,	
    458          	0xA2,0x0,	
    459          	0xA3,0x52,	
    460          	0xA4,0x0,	
    461          	0xA5,0x24,	
    462          	0xA6,0x0,	
    463          	0xA7,0x1,	
    464          	0xA8,0x0,	
    465          	0xA9,0x0,	
    466          	0xAA,0x0,	
    467          	0xAB,0x0,	
    468          	0xAC,0x0,	
    469          	0xAD,0xF6,	
    470          	0xAE,0x0,	
    471          	0xAF,0x6A,	
    472          	0xB0,0x2,	
    473          	0xB1,0x3,	
    474          	0xB2,0x88,	
    475          	0xB3,0x0,	
    476          	0xB4,0x0,	
    477          	0xB5,0x0,	
    478          	0xB6,0x0,	
    479          	0xB7,0x0,	
    480          	0xB8,0x0,	
    481          	0xB9,0x0,	
    482          	0xBA,0x0,	
    483          	0xBB,0x0,	
    484          	0xBC,0x0,	
    485          	0xBD,0x0,	
    486          	0xBE,0x0,	
    487          	0xBF,0x0,	
    488          	0xC0,0x5,	
    489          	0xC1,0xC7,	
    490          	0xC2,0x3,	
    491          	0xC3,0x3,	
    492          	0xC4,0x5A,	
    493          	0xC5,0x11,	
    494          	0xC6,0x20,	
    495          	0xC7,0x4,	
    496          	0xC8,0x0,	
    497          	0xC9,0x0,	
    498          	0xCA,0x0,	
    499          	0xCB,0x10,	
    500          	0xCC,0x4,	
    501          	0xCD,0x0,	
    502          	0xCE,0x0,	
    503          	0xCF,0x24,	
    504          	0xD0,0x0,	
    505          	0xD1,0xF0,	
    506          	0xD2,0xF0,	
    507          	0xD3,0xF0,	
    508          	0xD4,0x20,	
    509          	0xD5,0x0,	
    510          	0xD6,0x10,	
    511          	0xD7,0x0,	
    512          	0xD8,0x42,	
    513          	0xD9,0x10,	
    514          	0xDA,0x80,	
    515          	0xDB,0x80,	
    516          	0xDC,0x20,	
    517          	0xDD,0x1,	
    518          	0xDE,0x0,	
    519          	0xDF,0x0,	
    520          	0xE0,0x0,	
    521          	0xE1,0x0,	
    522          	0xE2,0x0,	
    523          	0xE3,0x0,	
    524          	0xE4,0x0,	
    525          	0xE5,0x0,	
    526          	0xE6,0x0,	
    527          	0xE7,0x0,	
    528          	0xE8,0x0,	
    529          	0xE9,0x0,	
    530          	0xEA,0x0,	
    531          	0xEB,0x0,	
    532          	0xEC,0x0,	
    533          	0xED,0x0,	
    534          	0xEE,0x0,	
    535          	0xEF,0x0,	
    536          	0xF0,0xF0,	
    537          	0xF1,0x0,	
    538          	0xF2,0xAD,	
    539          	0xF3,0x19,	
    540          	0xF4,0x0,	
    541          	0xF5,0xE8,	
    542          	0xF6,0x0,	
    543          	0xF7,0xE8,	
    544          	0xF8,0x0,	
    545          	0xF9,0x0,	
    546          	0xFA,0x0,	
    547          	0xFB,0x0,	
    548          	0xFC,0x0,	
    549          	0xFD,0x0,	
    550          	0xFE,0x0,	
    551          	0xFF,0x1	
    552          	
    553          } ;
    554          #else
    555          u8 InitCVBSAll_8816[] = 
    556          {
    557          	
    558          	0xFF,0x0,	//Page 0
    559          	0x0,0x22,	
    560          	0x1,0x93,	
    561          	0x2,0x40,	
    562          	0x3,0x0,	
    563          	0x4,0x0,	
    564          	0x5,0x8D,	
    565          	0x6,0x3,	
    566          	0x7,0x2,	
    567          	0x8,0x14,	
    568          	0x9,0xF3,	
    569          	0x0A,0x0F,	
    570          	0x0B,0xD0,	
    571          	0x0C,0xDC,	
    572          	0x0D,0x15,	
    573          	0x0E,0x80,	
    574          	0x0F,0x0,	
    575          	0x10,0x0,	
    576          	0x11,0x5C,	
    577          	0x12,0x13,	
    578          	0x13,0x80,	
    579          	0x14,0x80,	
    580          	0x15,0x0,	
    581          	0x16,0xC3,	
    582          	0x17,0x30,	
    583          	0x18,0x44,	
    584          	0x19,0x0,	
    585          	0x1A,0x90,	
    586          	0x1B,0x0,	
    587          	0x1C,0x27,	
    588          	0x1D,0x7F,	
    589          	0x1E,0x8,	
    590          	0x1F,0x0,	
    591          	0x20,0x50,	
    592          	0x21,0x42,	
    593          	0x22,0xF0,	
    594          	0x23,0xD8,	
    595          	0x24,0xBC,	
    596          	0x25,0xB8,	
    597          	0x26,0x44,	
    598          	0x27,0x2A,	
    599          	0x28,0x0,	
    600          	0x29,0x0,	
    601          	0x2A,0x78,	
    602          	0x2B,0x44,	
    603          	0x2C,0x30,	
    604          	0x2D,0x4,	
    605          	0x2E,0xA5,	
    606          	0x2F,0xE0,	
    607          	0x30,0x10,	
    608          	0x31,0x0,	
    609          	0x32,0x0,	
    610          	0x33,0x5,	
    611          	0x34,0x9A,	
    612          	0x35,0x30,	
    613          	0x36,0x0,	
    614          	0x37,0x0,	
    615          	0x38,0x8E,	
    616          	0x39,0x0,	
    617          	0x3A,0x0,	
    618          	0x3B,0x0,	
    619          	0x3C,0x0,	
    620          	0x3D,0x0,	
    621          	0x3E,0x0,	
    622          	0x3F,0x0,	
    623          	0x40,0x0,	
    624          	0x41,0x20,	
    625          	0x42,0x4,	
    626          	0x43,0x22,	
    627          	0x44,0x18,	
    628          	0x45,0x50,	
    629          	0x46,0x20,	
    630          	0x47,0x0,	
    631          	0x48,0xCF,	
    632          	0x49,0x61,	
    633          	0x4A,0x13,	
    634          	0x4B,0x13,	
    635          	0x4C,0x0,	
    636          	0x4D,0x30,	
    637          	0x4E,0x0,	
    638          	0x4F,0x0,	
    639          	0x50,0x0,	
    640          	0x51,0x20,	
    641          	0x52,0xFF,	
    642          	0x53,0x10,	
    643          	0x54,0x20,	
    644          	0x55,0xFA,	
    645          	0x56,0x0,	
    646          	0x57,0x0,	
    647          	0x58,0x0,	
    648          	0x59,0x0,	
    649          	0x5A,0x0,	
    650          	0x5B,0x30,	
    651          	0x5C,0x0,	
    652          	0x5D,0x30,	
    653          	0x5E,0x0,	
    654          	0x5F,0x0,	
    655          	
    656          	//0x60,0xE3,	
    657          	//0x61,0x80,	
    658          	//0x62,0x80,	
    659          
    660          	// ++, 150323 sys No zoom
    661          	//0x60,0xE3,	
    662          	//0x61,0x80,	
    663          	//0x62,0x80,	
    664          	//0x63,0x0,	
    665          	
    666          	0x60,0x00,  // X_SCALE_UP_MID
    667          	0x61,0x80,	
    668          	//0x62,0x80,
    669          	//0x63,0x01,
    670          	0x62,0x80,
    671          	0x63,0x01,	
    672          
    673          	// --, 150323 sys
    674          	
    675          	0x64,0x0,	
    676          	0x65,0x80,	
    677          
    678          	// ++, 150323 sys
    679          	//0x66,0x0,	
    680          	//0x67,0x0,
    681          	0x66,0x2c,	// H_NON_DISPLAY
    682          	0x67,0x0,
    683          	// --, 150323 sys
    684          
    685          	// ++, 150323 sys
    686          	//0x68,0x0,	// X_SCALE_UP_LO
    687          	
    688          	0x68,000,	// X_SCALE_UP_LO
    689          	// --, 150323 sys
    690          	0x69,0x0,	
    691          	0x6A,0x0,	
    692          	0x6B,0x0,	
    693          	0x6C,0x0,	
    694          	0x6D,0x0,	
    695          	0x6E,0x0,	
    696          	0x6F,0x0,	
    697          	0x70,0x60,	
    698          	0x71,0x80,	
    699          	0x72,0x80,	
    700          	0x73,0x80,	
    701          	0x74,0x80,	
    702          	0x75,0x80,	
    703          	0x76,0x80,	
    704          	0x77,0x3F,	
    705          	0x78,0x0A,	
    706          	0x79,0x0,	
    707          	0x7A,0x30,	
    708          	0x7B,0x0,	
    709          	0x7C,0x1C,	
    710          	0x7D,0x8,	
    711          	0x7E,0xF6,	
    712          	0x7F,0x8,	
    713          	0x80,0x10,	
    714          	0x81,0x0D,	
    715          	0x82,0x3,	
    716          	0x83,0x0,	
    717          	0x84,0x67,	
    718          	0x85,0x94,	
    719          	0x86,0x18,	
    720          	0x87,0xE8,	
    721          	0x88,0xCA,	
    722          	0x89,0x2,	
    723          	0x8A,0x0A,	
    724          	0x8B,0x4,	
    725          	0x8C,0x0,	
    726          	0x8D,0x0,	
    727          	0x8E,0x0,	
    728          	0x8F,0x0,	
    729          	0x90,0x0,	
    730          	0x91,0x6,	
    731          	0x92,0x6,	
    732          	0x93,0x6,	
    733          	0x94,0x0,	
    734          	0x95,0x40,	
    735          	0x96,0x0,	
    736          	0x97,0x0,	
    737          	0x98,0x0,	
    738          	0x99,0x8,	
    739          	0x9A,0x0,	
    740          	0x9B,0x31,	
    741          	0x9C,0x00,	
    742          	0x9D,0x0,	
    743          	
    744          	0x9E,0x0,	
    745          	0x9F,0x01,	
    746          	0xA0,0x0,	
    747          	0xA1,0x0,	
    748          	0xA2,0x0,	
    749          	0xA3,0x22,	
    750          	0xA4,0x0E,	
    751          	0xA5,0x32,	
    752          	0xA6,0x0,	
    753          	0xA7,0x0,	
    754          	0xA8,0x0,	
    755          	0xA9,0x50,	
    756          	0xAA,0x0,	
    757          	0xAB,0x44,	
    758          	0xAC,0x0F,	
    759          	0xAD,0x0,	
    760          	0xAE,0x0,	
    761          	0xAF,0x0,	
    762          	0xB0,0x40,	
    763          	0xB1,0x0,	
    764          	0xB2,0xCC,	
    765          	0xB3,0x1,	
    766          	0xB4,0x10,	
    767          	0xB5,0x20,	
    768          	0xB6,0x33,	
    769          	0xB7,0x12,	
    770          	0xB8,0x1,	
    771          	0xB9,0x29,	
    772          	0xBA,0xE0,	
    773          	0xBB,0x12,	
    774          	0xBC,0x0,	
    775          	0xBD,0x0C,	
    776          	0xBE,0xC2,	
    777          	0xBF,0x0,	
    778          	0xC0,0x0,	
    779          	0xC1,0x0,	
    780          	0xC2,0x0,	
    781          	0xC3,0x0,	
    782          	0xC4,0x40,	
    783          	0xC5,0x0,	
    784          	0xC6,0x0,	
    785          	0xC7,0x0,	
    786          	0xC8,0x0,	
    787          	0xC9,0x0,	
    788          	0xCA,0x0,	
    789          	0xCB,0x0,	
    790          	0xCC,0x0,	
    791          	0xCD,0x0,	
    792          	0xCE,0x0,	
    793          	0xCF,0x0,	
    794          	0xD0,0xC9,	
    795          	0xD1,0x4C,	
    796          	0xD2,0xFF,	
    797          	0xD3,0x7,	
    798          	0xD4,0x0,	
    799          	0xD5,0x3F,	
    800          	0xD6,0x0,	
    801          	0xD7,0x0,	
    802          	0xD8,0x0,	
    803          	0xD9,0x0,	
    804          	0xDA,0x3D,	
    805          	0xDB,0xC3,	
    806          	0xDC,0xFC,	
    807          	0xDD,0x0,	
    808          	0xDE,0x0,	
    809          	0xDF,0x0,	
    810          	0xE0,0x0,	
    811          	0xE1,0x0,	
    812          	0xE2,0x0,	
    813          	0xE3,0x0,	
    814          	0xE4,0x0,	
    815          	0xE5,0x0,	
    816          	0xE6,0x0,	
    817          	0xE7,0x0,	
    818          	0xE8,0x0,	
    819          	0xE9,0x0,	
    820          	0xEA,0x0,	
    821          	0xEB,0x0,	
    822          	0xEC,0x0,	
    823          	0xED,0x0,	
    824          	0xEE,0x0,	
    825          	0xEF,0x0,	
    826          	0xF0,0x0,	
    827          	0xF1,0x20,	
    828          	0xF2,0x0,	
    829          	0xF3,0x0,	
    830          	0xF4,0x16,	
    831          	0xF5,0x0,	
    832          	0xF6,0x0,	
    833          	0xF7,0x0,	
    834          	0xF8,0x0,	
    835          	0xF9,0x20,	
    836          	0xFA,0x90,	
    837          	0xFB,0x0,	
    838          	0xFC,0x40,	
    839          	0xFD,0x34,	
    840          	0xFE,0x0,	
    841          	0xFF,0x0,	
    842          	
    843          	0xFF,0x1,	//Page 1
    844          	0x0,0x0,	
    845          	0x1,0x40,	
    846          	0x2,0xBF,	
    847          	0x3,0x86,	
    848          	0x4,0x0,	
    849          	0x5,0x0,	
    850          	0x6,0x0,	
    851          	0x7,0x0,	
    852          	0x8,0x0,	
    853          	0x9,0x0,	
    854          	0x0A,0x0,	
    855          	0x0B,0x0,	
    856          	0x0C,0x0,	
    857          	0x0D,0x0,	
    858          	0x0E,0x0,	
    859          	0x0F,0x0,	
    860          	0x10,0x0,	
    861          	0x11,0x0,	
    862          	0x12,0x0,	
    863          	0x13,0x0,	
    864          	0x14,0x0,	
    865          	0x15,0x0,	
    866          	0x16,0x0,	
    867          	0x17,0x0,	
    868          	0x18,0x0,	
    869          	0x19,0x0,	
    870          	0x1A,0x0,	
    871          	0x1B,0x0,	
    872          	0x1C,0x0,	
    873          	0x1D,0x0,	
    874          	0x1E,0x0,	
    875          	0x1F,0x0,	
    876          	0x20,0x0,	
    877          	0x21,0x0,	
    878          	0x22,0x0,	
    879          	0x23,0x0,	
    880          	0x24,0x0,	
    881          	0x25,0x0,	
    882          	0x26,0x0,	
    883          	0x27,0x0,	
    884          	0x28,0x0,	
    885          	0x29,0x0,	
    886          	0x2A,0x0,	
    887          	0x2B,0x0,	
    888          	0x2C,0x0,	
    889          	0x2D,0x0,	
    890          	0x2E,0x0,	
    891          	0x2F,0x0,	
    892          	0x30,0xF2,	
    893          	0x31,0xAD,	
    894          	0x32,0x4,	
    895          	0x33,0x80,	
    896          	0x34,0x84,	
    897          	0x35,0x0,	
    898          	0x36,0x20,	
    899          	0x37,0x0,	
    900          	0x38,0x0,	
    901          	0x39,0x0,	
    902          	0x3A,0x0,	
    903          	0x3B,0x0,	
    904          	0x3C,0x0,	
    905          	0x3D,0x0,	
    906          	0x3E,0x0,	
    907          	0x3F,0x0,	
    908          	0x40,0x0,	
    909          	0x41,0x0,	
    910          	0x42,0xEE,	
    911          	0x43,0x0,	
    912          	0x44,0x0,	
    913          	0x45,0x0,	
    914          	0x46,0x0,	
    915          	0x47,0x0,	
    916          	0x48,0x0,	
    917          	0x49,0x0,	
    918          	0x4A,0x0,	
    919          	0x4B,0x0,	
    920          	0x4C,0x0,	
    921          	0x4D,0x0,	
    922          	0x4E,0x0,	
    923          	0x4F,0x0,	
    924          	0x50,0x0,	
    925          	0x51,0x0,	
    926          	0x52,0x0,	
    927          	0x53,0x0,	
    928          	0x54,0x0,	
    929          	0x55,0x0,	
    930          	0x56,0x0,	
    931          	0x57,0x41,	
    932          	0x58,0x2,	
    933          	0x59,0x0,	
    934          	0x5A,0x0,	
    935          	0x5B,0x0,	
    936          	0x5C,0x0,	
    937          	0x5D,0x0,	
    938          	0x5E,0x0,	
    939          	0x5F,0x0,	
    940          	0x60,0x0,	
    941          	0x61,0x0,	
    942          	0x62,0x0,	
    943          	0x63,0x0,	
    944          	0x64,0x0,	
    945          	0x65,0x0,	
    946          	0x66,0x0,	
    947          	0x67,0x0,	
    948          	0x68,0x0,	
    949          	0x69,0x0,	
    950          	0x6A,0x0,	
    951          	0x6B,0x0,	
    952          	0x6C,0x0,	
    953          	0x6D,0x0,	
    954          	0x6E,0x0,	
    955          	0x6F,0x0,	
    956          	0x70,0x0,	
    957          	0x71,0x0,	
    958          	0x72,0x0,	
    959          	0x73,0x0,	
    960          	0x74,0x0,	
    961          	0x75,0x0,	
    962          	0x76,0x0,	
    963          	0x77,0x5A,	
    964          	0x78,0x0,	
    965          	0x79,0x7F,	
    966          	0x7A,0x1,	
    967          	0x7B,0x0E,	
    968          	0x7C,0x0,	
    969          	0x7D,0x20,	
    970          	0x7E,0x1,	
    971          	0x7F,0xE2,	
    972          	0x80,0x0,	
    973          	0x81,0x0,	
    974          	0x82,0x7,	
    975          	0x83,0x1F,	
    976          	0x84,0x64,	
    977          	0x85,0x0,	
    978          	0x86,0x0,	
    979          	0x87,0x0,	
    980          	0x88,0x0,	
    981          	0x89,0x0,	
    982          	0x8A,0x2,	
    983          	0x8B,0x4D,	
    984          	0x8C,0x0,	
    985          	0x8D,0x0,	
    986          	0x8E,0x2,	
    987          	0x8F,0x0E,	
    988          	0x90,0x3,	
    989          	0x91,0x59,	
    990          	0x92,0x3,	
    991          	0x93,0x57,	
    992          	0x94,0x0,	
    993          	0x95,0x1,	
    994          	0x96,0x0,	
    995          	0x97,0x0,	
    996          	0x98,0x0,	
    997          	0x99,0x0,	
    998          	0x9A,0x0,	
    999          	0x9B,0x36,	
   1000          	0x9C,0x0,	
   1001          	0x9D,0x1,	
   1002          	
   1003          	0x9E,0x0,	
   1004          	0x9F,0x0,	
   1005          	0xA0,0x2,	
   1006          	0xA1,0x68,	
   1007          	0xA2,0x0,	
   1008          	0xA3,0x52,	
   1009          	0xA4,0x0,	
   1010          	0xA5,0x24,	
   1011          	0xA6,0x0,	
   1012          	0xA7,0x1,	
   1013          	0xA8,0x0,	
   1014          	0xA9,0x0,	
   1015          	0xAA,0x0,	
   1016          	0xAB,0x0,	
   1017          	0xAC,0x0,	
   1018          	0xAD,0xF6,	
   1019          	0xAE,0x0,	
   1020          	0xAF,0x6A,	
   1021          	0xB0,0x2,	
   1022          	0xB1,0x3,	
   1023          	0xB2,0x88,	
   1024          	0xB3,0x0,	
   1025          	0xB4,0x0,	
   1026          	0xB5,0x0,	
   1027          	0xB6,0x0,	
   1028          	0xB7,0x0,	
   1029          	0xB8,0x0,	
   1030          	0xB9,0x0,	
   1031          	0xBA,0x0,	
   1032          	0xBB,0x0,	
   1033          	0xBC,0x0,	
   1034          	0xBD,0x0,	
   1035          	0xBE,0x0,	
   1036          	0xBF,0x0,	
   1037          	0xC0,0x5,	
   1038          	0xC1,0xC7,	
   1039          	0xC2,0x3,	
   1040          	0xC3,0x3,	
   1041          	0xC4,0x5A,	
   1042          	0xC5,0x11,	
   1043          	0xC6,0x20,	
   1044          	0xC7,0x4,	
   1045          	0xC8,0x0,	
   1046          	0xC9,0x0,	
   1047          	0xCA,0x0,	
   1048          	0xCB,0x10,	
   1049          	0xCC,0x4,	
   1050          	0xCD,0x0,	
   1051          	0xCE,0x0,	
   1052          	0xCF,0x24,	
   1053          	0xD0,0x0,	
   1054          	0xD1,0xF0,	
   1055          	0xD2,0xF0,	
   1056          	0xD3,0xF0,	
   1057          	0xD4,0x20,	
   1058          	0xD5,0x0,	
   1059          	0xD6,0x10,	
   1060          	0xD7,0x0,	
   1061          	0xD8,0x42,	
   1062          	0xD9,0x10,	
   1063          	0xDA,0x80,	
   1064          	0xDB,0x80,	
   1065          	0xDC,0x20,	
   1066          	0xDD,0x1,	
   1067          	0xDE,0x0,	
   1068          	0xDF,0x0,	
   1069          	0xE0,0x0,	
   1070          	0xE1,0x0,	
   1071          	0xE2,0x0,	
   1072          	0xE3,0x0,	
   1073          	0xE4,0x0,	
   1074          	0xE5,0x0,	
   1075          	0xE6,0x0,	
   1076          	0xE7,0x0,	
   1077          	0xE8,0x0,	
   1078          	0xE9,0x0,	
   1079          	0xEA,0x0,	
   1080          	0xEB,0x0,	
   1081          	0xEC,0x0,	
   1082          	0xED,0x0,	
   1083          	0xEE,0x0,	
   1084          	0xEF,0x0,	
   1085          	0xF0,0xF0,	
   1086          	0xF1,0x0,	
   1087          	0xF2,0xAD,	
   1088          	0xF3,0x19,	
   1089          	0xF4,0x0,	
   1090          	0xF5,0xE8,	
   1091          	0xF6,0x0,	
   1092          	0xF7,0xE8,	
   1093          	0xF8,0x0,	
   1094          	0xF9,0x0,	
   1095          	0xFA,0x0,	
   1096          	0xFB,0x0,	
   1097          	0xFC,0x0,	
   1098          	0xFD,0x0,	
   1099          	0xFE,0x0,	
   1100          	0xFF,0x1	
   1101          	
   1102          } ;
   1103          
   1104          #endif
   1105          
   1106          /* Private function prototypes -----------------------------------------------*/
   1107          /* Private functions ---------------------------------------------------------*/
   1108          
   1109          /**\
   1110            * @brief  None
   1111            * @param  None
   1112            * @retval None
   1113            */
   1114          
   1115          void NOP_TW8816(void)
   1116          {
   1117          	TimeDelay_usec(1);	
   1118          }
   1119          
   1120          
   1121          void TW8816_PortChange(unsigned char dir)
   1122          {
   1123          	unsigned short temp;
   1124          	
   1125          	GPIO_InitTypeDef GPIO_InitStructure;
   1126          	
   1127          	if (dir)// Output
   1128          	{
   1129          		temp = TW8816_I2C2_PORT->IDR;			//	GPIO_ReadInputData
   1130          		temp = ((~(TW8816_I2C2_SDA)) & temp);
   1131          		TW8816_I2C2_PORT->ODR = (temp);			//	GPIO_Write
   1132          		
   1133          		GPIO_InitStructure.GPIO_Pin   = TW8816_I2C2_SDA;
   1134          		GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;
   1135          		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_25MHz;
   1136          		GPIO_Init(TW8816_I2C2_PORT, &GPIO_InitStructure);	
   1137          	}
   1138          	else	// Input
   1139          	{	
   1140          		temp = TW8816_I2C2_PORT->IDR;			//	GPIO_ReadInputData
   1141          		temp = ((~(TW8816_I2C2_SDA)) & temp);
   1142          		TW8816_I2C2_PORT->ODR = (temp);			//	GPIO_Write
   1143          		
   1144          		GPIO_InitStructure.GPIO_Pin  = TW8816_I2C2_SDA;
   1145          		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   1146          		GPIO_Init(TW8816_I2C2_PORT, &GPIO_InitStructure);	
   1147          	}
   1148          }
   1149          
   1150          void I2C2_Write_8816(u8 WData)
   1151          {
   1152          	u8 i, j;
   1153          
   1154          	NOP_TW8816();
   1155          
   1156          	for (i = 0; i < 8; i++)
   1157          	{
   1158          		j = ( WData & 0x80 ) ? 1 : 0;
   1159          		(j) ? GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA) : GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1160          		NOP_TW8816();
   1161          		TW8816_SCL1;
   1162          		NOP_TW8816();		
   1163          		WData <<= 1;
   1164          		TW8816_SCL0;
   1165          		NOP_TW8816();
   1166          	}
   1167          
   1168          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1169          	NOP_TW8816();
   1170          	TW8816_SCL1;
   1171          	NOP_TW8816();
   1172          	TW8816_SCL0;
   1173          }
   1174          
   1175          void I2C2_ByteWrite_8816(u16 in_AddrVal, u8 in_DataVal)
   1176          {
   1177          	u16 tmp_index;
   1178          
   1179          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1180          	TW8816_SDAOUT;
   1181          	// START
   1182          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1183          	TW8816_SCL1;
   1184          	NOP_TW8816();
   1185          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1186          	NOP_TW8816();
   1187          	TW8816_SCL0;
   1188          	// END
   1189          
   1190          	I2C2_Write_8816(TW8816_I2C_Addr);
   1191          	I2C2_Write_8816((u8)in_AddrVal);
   1192          	I2C2_Write_8816(in_DataVal);
   1193          
   1194          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1195          	NOP_TW8816();
   1196          	TW8816_SCL1;
   1197          	NOP_TW8816();
   1198          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1199          
   1200          	for (tmp_index = 0; tmp_index < 15000; tmp_index++);
   1201          }
   1202          u8 I2C2_Read_8816(void)
   1203          {
   1204          	u8 i;
   1205          	u8 RData;
   1206          
   1207          	NOP_TW8816();
   1208          	TW8816_SCL0;
   1209          	NOP_TW8816();
   1210          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1211          	TW8816_SDAIN;
   1212          
   1213          	for ( i = 0; i < 8; i++ )
   1214          	{
   1215          		TW8816_SCL1;
   1216          		NOP_TW8816();
   1217          		NOP_TW8816();
   1218          		RData = (RData << 1) | TW8816_SDA_READ;
   1219          		TW8816_SCL0;
   1220          		NOP_TW8816();
   1221          		NOP_TW8816();
   1222          	}
   1223          	GPIO_ResetBits(TW8816_I2C2_PORT, GPIO_Pin_7);
   1224          	TW8816_SDAOUT;
   1225          	return (RData );
   1226          }
   1227          
   1228          u8 I2C2_ByteRead_8816(u16 in_AddrVal)
   1229          {
   1230          	u8 RData = 0;
   1231          	u16 tmp_index;
   1232          
   1233          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1234          	TW8816_SDAOUT;
   1235          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1236          	TW8816_SCL1;
   1237          	NOP_TW8816();
   1238          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1239          	NOP_TW8816();
   1240          	TW8816_SCL0;
   1241          
   1242          	I2C2_Write_8816(TW8816_I2C_Addr);
   1243          	I2C2_Write_8816((u8)in_AddrVal);
   1244          
   1245          	NOP_TW8816();
   1246          	NOP_TW8816();
   1247          
   1248          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1249          	NOP_TW8816();
   1250          	TW8816_SCL1;
   1251          	NOP_TW8816();
   1252          
   1253          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1254          	NOP_TW8816();
   1255          	TW8816_SCL0;
   1256          
   1257          	I2C2_Write_8816(0x8b);
   1258          
   1259          	RData = I2C2_Read_8816();
   1260          
   1261          	// NAK
   1262          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1263          	NOP_TW8816();
   1264          	TW8816_SCL1;
   1265          	NOP_TW8816();
   1266          	TW8816_SCL0;
   1267          	NOP_TW8816();
   1268          
   1269          	// STOP
   1270          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1271          	NOP_TW8816();
   1272          	TW8816_SCL1;
   1273          	NOP_TW8816();
   1274          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1275          
   1276          	for (tmp_index = 0; tmp_index < 15000; tmp_index++);
   1277          	return (RData);
   1278          }
   1279          
   1280          void WriteTW8816(u8 in_AddrVal, u8 in_DataVal)
   1281          {
   1282          	I2C2_ByteWrite_8816(in_AddrVal, in_DataVal);
   1283          	TimeDelay_usec(500);
   1284          }
   1285          
   1286          u8 ReadTW8816(u8 in_AddrVal)
   1287          {
   1288          	u8 val;
   1289          
   1290          	val = I2C2_ByteRead_8816(in_AddrVal);
   1291          
   1292          	return(val);
   1293          }
   1294          
   1295          void I2C2DeviceInitialize_8816(u8 *RegSet)  
   1296          {
   1297          	u8 Addr, val;
   1298                 
   1299          	RegSet += 2;
   1300          	
   1301          	// 0xff, 0xff is end of data
   1302          	while (( RegSet[0] != 0xFF ) || ( RegSet[1]!= 0xFF )) 
   1303          	{			
   1304          		Addr = *RegSet;
   1305          		val = *(RegSet+1);
   1306          		I2C2_ByteWrite_8816(Addr, val);
   1307          		RegSet+=2;
   1308          	}
   1309          
   1310          	WriteTW8816(0xff, 0x00);	// Set page 0
   1311          }
   1312          
   1313          
   1314          void InitCVBSRegister_8816( void )
   1315          {
   1316          	I2C2DeviceInitialize_8816( InitCVBSAll_8816 );
   1317          }
   1318          
   1319          void TW8816_Control_Init(void)
   1320          {
   1321          	//DebugMsg_printf("++ TW8816_Control_Init (I2C2 & SPI2), ADC Initialize START\r\n");
   1322          
   1323          	InitCVBSRegister_8816();
   1324          
   1325          	//DebugMsg_printf("-- TW8816_Control_Init (I2C2 & SPI2), ADC Initialize END\r\n");
   1326          }
   1327          
   1328          u8 CAMSig_1;
   1329          
   1330          void TW8816_CheckCamera_Input(u8 Mode)
   1331          {
   1332          	
   1333          	WriteTW8816(0xff, 0x00);
   1334          	CAMSig_1 = ReadTW8816(0x01);
   1335          	if((CAMSig_1 & 0x80) >> 7== 0x01)
   1336          	{
   1337                    SetBackgroundBlueOSD();
   1338                    SetDisplayUpdate();         
   1339          	}
   1340          	else
   1341          	{
   1342                    SetBackgroundBlueOSD();
   1343                    SetDisplayUpdate();
   1344          	}
   1345          	
   1346          }
   1347          void TW8816_CameraMode(u8 Mode, u8 OSD)
   1348          {
   1349          	SetDisplayUpdate();
   1350                  SetBackgroundBlueOSD();
   1351                  //WriteTW8816(0xff, 0x00);
   1352          	//WriteTW8816(0x02, 0x40);
   1353          }
   1354          // ++, sys3215, 141211
   1355          void WL9F_CAMERA_Init(void)
   1356          {
   1357          	TW8816_Control_Init();
   1358          }
   1359          // --, sys3215, 141211
   1360          /*********(C) COPYRIGHT 2010 TaeHa Mechatronics Co., Ltd. *****END OF FILE****/
   1361          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   I2C2DeviceInitialize_8816
         8   -> I2C2_ByteWrite_8816
         0   -> TimeDelay_usec
      16   I2C2_ByteRead_8816
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> I2C2_Read_8816
        16   -> I2C2_Write_8816
        16   -> TW8816_PortChange
        16   -> TimeDelay_usec
      16   I2C2_ByteWrite_8816
        16   -> GPIO_ResetBits
         0   -> GPIO_SetBits
        16   -> GPIO_SetBits
        16   -> I2C2_Write_8816
        16   -> TW8816_PortChange
        16   -> TimeDelay_usec
      16   I2C2_Read_8816
        16   -> GPIO_ReadInputDataBit
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> TW8816_PortChange
        16   -> TimeDelay_usec
      16   I2C2_Write_8816
         0   -> GPIO_ResetBits
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> TimeDelay_usec
       0   InitCVBSRegister_8816
         0   -> I2C2DeviceInitialize_8816
       0   NOP_TW8816
         0   -> TimeDelay_usec
       0   ReadTW8816
         0   -> I2C2_ByteRead_8816
       8   TW8816_CameraMode
         0   -> SetBackgroundBlueOSD
         8   -> SetDisplayUpdate
       8   TW8816_CheckCamera_Input
         8   -> I2C2_ByteRead_8816
         8   -> I2C2_ByteWrite_8816
         8   -> SetBackgroundBlueOSD
         0   -> SetDisplayUpdate
         8   -> TimeDelay_usec
       0   TW8816_Control_Init
         0   -> I2C2DeviceInitialize_8816
      16   TW8816_PortChange
        16   -> GPIO_Init
       0   WL9F_CAMERA_Init
         0   -> I2C2DeviceInitialize_8816
       8   WriteTW8816
         8   -> I2C2_ByteWrite_8816
         0   -> TimeDelay_usec


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       8  ?Subroutine0
       4  ?Subroutine1
       1  CAMSig_1
      34  I2C2DeviceInitialize_8816
     262  I2C2_ByteRead_8816
     140  I2C2_ByteWrite_8816
     126  I2C2_Read_8816
     126  I2C2_Write_8816
    1028  InitCVBSAll_8816
       2  InitCVBSRegister_8816
       6  NOP_TW8816
       2  ReadTW8816
      14  TW8816_CameraMode
      40  TW8816_CheckCamera_Input
       2  TW8816_Control_Init
      60  TW8816_PortChange
       2  WL9F_CAMERA_Init
      12  WriteTW8816

 
     1 byte  in section .bss
 1 028 bytes in section .data
   852 bytes in section .text
 
   852 bytes of CODE memory
 1 029 bytes of DATA memory

Errors: none
Warnings: none
